0.991984, 0.992015, 0.992045, 0.992075, 0.992105, 0.992135, 0.992165,
0.992195, 0.992224, 0.992254, 0.992283, 0.992312, 0.992342, 0.992371,
0.9924, 0.992429, 0.992457, 0.992486, 0.992515, 0.992543, 0.992571,
0.9926, 0.992628, 0.992656, 0.992684, 0.992712, 0.99274, 0.992767,
0.992795, 0.992822, 0.99285, 0.992877, 0.992904, 0.992931, 0.992958,
0.992985, 0.993012, 0.993039, 0.993065, 0.993092, 0.993118, 0.993145,
0.993171, 0.993197, 0.993223, 0.993249, 0.993275, 0.993301, 0.993327,
0.993352, 0.993378, 0.993403, 0.993428, 0.993454, 0.993479, 0.993504,
0.993529, 0.993554, 0.993578, 0.993603, 0.993628, 0.993652, 0.993677,
0.993701, 0.993725, 0.993749, 0.993774, 0.993798, 0.993821, 0.993845,
0.993869, 0.993893, 0.993916, 0.99394, 0.993963, 0.993986, 0.99401,
0.994033, 0.994056, 0.994079, 0.994102, 0.994125, 0.994147, 0.99417,
0.994193, 0.994215, 0.994237, 0.99426, 0.994282, 0.994304, 0.994326,
0.994348, 0.99437, 0.994392, 0.994414, 0.994435, 0.994457, 0.994479,
0.9945, 0.994521, 0.994543, 0.994564, 0.994585, 0.994606, 0.994627,
0.994648, 0.994669, 0.99469, 0.99471, 0.994731, 0.994751, 0.994772,
0.994792, 0.994813, 0.994833, 0.994853, 0.994873, 0.994893, 0.994913,
0.994933, 0.994953, 0.994972, 0.994992, 0.995012, 0.995031, 0.995051,
0.99507, 0.995089, 0.995108, 0.995128, 0.995147, 0.995166, 0.995185,
0.995203, 0.995222, 0.995241, 0.99526, 0.995278, 0.995297, 0.995315,
0.995334, 0.995352, 0.99537, 0.995388, 0.995407, 0.995425, 0.995443,
0.995461, 0.995478, 0.995496, 0.995514, 0.995532, 0.995549, 0.995567,
0.995584, 0.995602, 0.995619, 0.995636, 0.995653, 0.995671, 0.995688,
0.995705, 0.995722, 0.995738, 0.995755, 0.995772, 0.995789, 0.995805,
0.995822, 0.995839, 0.995855, 0.995871, 0.995888, 0.995904, 0.99592,
0.995936, 0.995952, 0.995968, 0.995984, 0.996, 0.996016, 0.996032,
0.996048, 0.996063, 0.996079, 0.996095, 0.99611, 0.996126, 0.996141,
0.996156, 0.996172, 0.996187, 0.996202, 0.996217, 0.996232, 0.996247,
0.996262, 0.996277, 0.996292, 0.996307, 0.996321, 0.996336, 0.99635,
0.996365, 0.99638, 0.996394, 0.996408, 0.996423, 0.996437, 0.996451,
0.996465, 0.996479, 0.996494, 0.996508, 0.996522, 0.996535, 0.996549,
0.996563, 0.996577, 0.996591, 0.996604, 0.996618, 0.996631, 0.996645,
0.996658, 0.996672, 0.996685, 0.996698, 0.996711, 0.996725, 0.996738,
0.996751, 0.996764, 0.996777, 0.99679, 0.996803, 0.996816, 0.996828,
0.996841, 0.996854, 0.996867, 0.996879, 0.996892, 0.996904, 0.996917,
0.996929, 0.996941, 0.996954, 0.996966, 0.996978, 0.99699, 0.997003,
0.997015, 0.997027, 0.997039, 0.997051, 0.997063, 0.997074, 0.997086,
0.997098, 0.99711, 0.997121, 0.997133, 0.997145, 0.997156, 0.997168,
0.997179, 0.99719, 0.997202, 0.997213, 0.997224, 0.997236, 0.997247,
0.997258, 0.997269, 0.99728, 0.997291, 0.997302, 0.997313, 0.997324,
0.997335, 0.997346, 0.997357, 0.997367, 0.997378, 0.997389, 0.997399,
0.99741, 0.99742, 0.997431, 0.997441, 0.997452, 0.997462, 0.997472,
0.997483, 0.997493, 0.997503, 0.997513, 0.997523, 0.997534, 0.997544,
0.997554, 0.997564, 0.997574, 0.997583, 0.997593, 0.997603, 0.997613,
0.997623, 0.997632, 0.997642, 0.997652, 0.997661, 0.997671, 0.99768,
0.99769, 0.997699, 0.997709, 0.997718, 0.997727, 0.997737, 0.997746,
0.997755, 0.997764, 0.997774, 0.997783, 0.997792, 0.997801, 0.99781,
0.997819, 0.997828, 0.997837, 0.997846, 0.997854, 0.997863, 0.997872,
0.997881, 0.997889, 0.997898, 0.997907, 0.997915, 0.997924, 0.997932,
0.997941, 0.997949, 0.997958, 0.997966, 0.997975, 0.997983, 0.997991,
0.998, 0.998008, 0.998016, 0.998024, 0.998032, 0.998041, 0.998049,
0.998057, 0.998065, 0.998073, 0.998081, 0.998089, 0.998096, 0.998104,
0.998112, 0.99812, 0.998128, 0.998135, 0.998143, 0.998151, 0.998159,
0.998166, 0.998174, 0.998181, 0.998189, 0.998196, 0.998204, 0.998211,
0.998219, 0.998226, 0.998233, 0.998241, 0.998248, 0.998255, 0.998263,
0.99827, 0.998277, 0.998284, 0.998291, 0.998298, 0.998305, 0.998312,
0.998319, 0.998326, 0.998333, 0.99834, 0.998347, 0.998354, 0.998361,
0.998368, 0.998375, 0.998381, 0.998388, 0.998395, 0.998401, 0.998408,
0.998415, 0.998421, 0.998428, 0.998435, 0.998441, 0.998448, 0.998454,
0.998461, 0.998467, 0.998473, 0.99848, 0.998486, 0.998492, 0.998499,
0.998505, 0.998511, 0.998517, 0.998524, 0.99853, 0.998536, 0.998542,
0.998548, 0.998554, 0.99856, 0.998566, 0.998572, 0.998578, 0.998584,
0.99859, 0.998596, 0.998602, 0.998608, 0.998614, 0.99862, 0.998625,
0.998631, 0.998637, 0.998643, 0.998648, 0.998654, 0.99866, 0.998665,
0.998671, 0.998677, 0.998682, 0.998688, 0.998693, 0.998699, 0.998704,
0.99871, 0.998715, 0.99872, 0.998726, 0.998731, 0.998737, 0.998742,
0.998747, 0.998752, 0.998758, 0.998763, 0.998768, 0.998773, 0.998779,
0.998784, 0.998789, 0.998794, 0.998799, 0.998804, 0.998809, 0.998814,
0.998819, 0.998824, 0.998829, 0.998834, 0.998839, 0.998844, 0.998849,
0.998854, 0.998859, 0.998864, 0.998868, 0.998873, 0.998878, 0.998883,
0.998887, 0.998892, 0.998897, 0.998901, 0.998906, 0.998911, 0.998915,
0.99892, 0.998925, 0.998929, 0.998934, 0.998938, 0.998943, 0.998947,
0.998952, 0.998956, 0.998961, 0.998965, 0.998969, 0.998974, 0.998978,
0.998983, 0.998987, 0.998991, 0.998996, 0.999, 0.999004, 0.999008,
0.999013, 0.999017, 0.999021, 0.999025, 0.999029, 0.999033, 0.999038))
View(data_all_128)
View(data_avg_set)
merged <- merge(data_all_128,data_avg_set,data_prob_specific,by="x")
View(data_prob_specific)
View(data_avg_set)
View(data_all_128)
merged <- merge(data_all_128,data_avg_set,by="x")
View(merged)
View(data_avg_set)
merged <- merge(data_all_128,data_avg_set,by="x",all=T)
View(merged)
merged <- merge(merge(data_all_128,data_avg_set,by="x",all=T),data_prob_specific,by="x",all=T)
View(merged)
View(data_prob_specific)
View(merged)
colnames(merged) <- c("x", "avg_all_128", "avg_avg_set", "avg_prob_specific")
View(merged)
plot <- ggplot2::ggplot(merged, ggplot2::aes(x)) +
ggplot2::geom_line(ggplot2::aes(y = avg_all_128, colour = "black")) +
ggplot2::geom_line(ggplot2::aes(y = avg_avg_set, colour = "blue"))
plot
View(merged)
merged[,"avg_all_128"] <- merged[,"avg_all_128"]/128
ggplot2::ggplot(merged, ggplot2::aes(x)) +
ggplot2::geom_line(ggplot2::aes(y = avg_all_128, colour = "black")) +
ggplot2::geom_line(ggplot2::aes(y = avg_avg_set, colour = "blue"))
View(merged)
merged <- merge(merge(data_all_128,data_avg_set,by="x",all=T),data_prob_specific,by="x",all=T)
colnames(merged) <- c("x", "avg_all_128", "avg_avg_set", "avg_prob_specific")
merged[,"avg_avg_set"] <- merged[,"avg_avg_set"]/128
ggplot2::ggplot(merged, ggplot2::aes(x)) +
ggplot2::geom_line(ggplot2::aes(y = avg_all_128, colour = "black")) +
ggplot2::geom_line(ggplot2::aes(y = avg_avg_set, colour = "blue"))
ggplot2::ggplot(merged, ggplot2::aes(x)) +
ggplot2::geom_line(ggplot2::aes(y = avg_all_128*100, colour = "black")) +
ggplot2::geom_line(ggplot2::aes(y = avg_avg_set*100, colour = "blue"))
merged_melt <- reshape::melt(merged)
install.packages("reshape")
merged_melt <- reshape::melt(merged)
View(merged_melt)
merged_melt <- reshape::melt(merged, id=c("x"))
View(merged_melt)
View(merged_melt)
ggplot2::ggplot(merged, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line()
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line()
View(data_all_128)
merged <- merge(merge(data_all_128_relevant,data_avg_set_relevant,by="x",all=T),data_prob_specific_relevant,by="x",all=T)
data_all_128_relevant <- data_all_128[data_all_128[,2]>0.9 & data_all_128[,2]<0.999,]
data_all_128_relevant[,2] <- data_all_128_relevant[,2]*100
data_avg_set_relevant <- data_avg_set[data_avg_set[,2]>85 & data_avg_set[,2]<127.9,]
data_avg_set_relevant[,2] <- (data_avg_set_relevant[,2])*64
data_prob_specific_relevant <- data_prob_specific[data_prob_specific[,2]>0.5 & data_prob_specific[,2]<0.999,]
data_prob_specific_relevant[,2] <- data_prob_specific_relevant[,2]*100
data_avg_set_relevant <- data_avg_set[data_avg_set[,2]>85 & data_avg_set[,2]<127.9,]
merged <- merge(merge(data_all_128_relevant,data_avg_set_relevant,by="x",all=T),data_prob_specific_relevant,by="x",all=T)
colnames(merged) <- c("x", "avg_all_128", "avg_avg_set", "avg_prob_specific")
merged[,"avg_avg_set"] <- merged[,"avg_avg_set"]/128
merged_melt <- reshape::melt(merged, id=c("x"))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line()
merged <- merge(merge(data_all_128_relevant,data_avg_set_relevant,by="x",all=T),data_prob_specific_relevant,by="x",all=T)
colnames(merged) <- c("x", "avg_all_128", "avg_avg_set", "avg_prob_specific")
View(merged)
merged[,"avg_avg_set"] <- merged[,"avg_avg_set"]/128
View(merged)
merged <- merge(merge(data_all_128_relevant,data_avg_set_relevant,by="x",all=T),data_prob_specific_relevant,by="x",all=T)
colnames(merged) <- c("x", "avg_all_128", "avg_avg_set", "avg_prob_specific")
merged[,"avg_avg_set"] <- merged[,"avg_avg_set"]/128*100
merged_melt <- reshape::melt(merged, id=c("x"))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line()
data_all_128_relevant <- data_all_128[data_all_128[,2]>0.9 & data_all_128[,2]<0.999,]
data_all_128_relevant[,2] <- data_all_128_relevant[,2]*100
data_prob_specific_relevant <- data_prob_specific[data_prob_specific[,2]>0.75 & data_prob_specific[,2]<0.999,]
data_prob_specific_relevant[,2] <- data_prob_specific_relevant[,2]*100
data_avg_set_relevant <- data_avg_set[data_avg_set[,2]>85 & data_avg_set[,2]<127.9,]
merged <- merge(merge(data_all_128_relevant,data_avg_set_relevant,by="x",all=T),data_prob_specific_relevant,by="x",all=T)
colnames(merged) <- c("x", "avg_all_128", "avg_avg_set", "avg_prob_specific")
merged[,"avg_avg_set"] <- merged[,"avg_avg_set"]/128*100
merged_melt <- reshape::melt(merged, id=c("x"))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line()
View(merged)
merged <- merged[,-4]
merged_melt <- reshape::melt(merged, id=c("x"))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line()
data_all_128_relevant <- data_all_128[data_all_128[,2]>0.75 & data_all_128[,2]<0.999,]
data_all_128_relevant[,2] <- data_all_128_relevant[,2]*100
data_prob_specific_relevant <- data_prob_specific[data_prob_specific[,2]>0.75 & data_prob_specific[,2]<0.999,]
data_prob_specific_relevant[,2] <- data_prob_specific_relevant[,2]*100
data_avg_set_relevant <- data_avg_set[data_avg_set[,2]>75*(128/100) & data_avg_set[,2]<127.9,]
merged <- merge(merge(data_all_128_relevant,data_avg_set_relevant,by="x",all=T),data_prob_specific_relevant,by="x",all=T)
colnames(merged) <- c("x", "avg_all_128", "avg_avg_set", "avg_prob_specific")
merged[,"avg_avg_set"] <- merged[,"avg_avg_set"]/128*100
merged <- merged[,-4]
merged_melt <- reshape::melt(merged, id=c("x"))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line()
merged <- merge(merge(data_all_128,data_avg_set,by="x",all=T),data_prob_specific,by="x",all=T)
colnames(merged) <- c("x", "avg_all_128", "avg_avg_set", "avg_prob_specific")
merged[,"avg_avg_set"] <- merged[,"avg_avg_set"]/128*100
merged <- merged[,-4]
merged_melt <- reshape::melt(merged, id=c("x"))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line() +
ggplot2::scale_y_continuous(name="Wahrscheinlichkeit alle Eviction Sets zu finden (\\%)",
limits=c(75, 100),
breaks=seq(90,100,2)) +
ggplot2::scale_x_continuous(name="Anzahl an Adressen im Pool (x)",
limits=c(4000, 5000),
breaks=seq(4000,5000,200))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line() +
ggplot2::scale_y_continuous(name="Wahrscheinlichkeit alle Eviction Sets zu finden (\\%)",
limits=c(75, 100),
breaks=seq(90,100,2))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line() +
ggplot2::scale_y_continuous(name="Wahrscheinlichkeit alle Eviction Sets zu finden (\\%)",
limits=c(75, 100),
breaks=seq(75,100,2))
View(merged_melt)
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line()
merged <- merge(merge(data_all_128,data_avg_set,by="x",all=T),data_prob_specific,by="x",all=T)
colnames(merged) <- c("x", "avg_all_128", "avg_avg_set", "avg_prob_specific")
merged[,"avg_avg_set"] <- merged[,"avg_avg_set"]/128
merged <- merged[,-4]
merged_melt <- reshape::melt(merged, id=c("x"))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line() +
ggplot2::scale_y_continuous(name="Wahrscheinlichkeit alle Eviction Sets zu finden (\\%)",
limits=c(75, 100),
breaks=seq(75,100,2))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value*100, color=variable)) +
ggplot2::geom_line() +
ggplot2::scale_y_continuous(name="Wahrscheinlichkeit alle Eviction Sets zu finden (\\%)",
limits=c(75, 100),
breaks=seq(75,100,2))
data_all_128_relevant <- data_all_128[data_all_128[,2]<0.999,]
data_all_128_relevant[,2] <- data_all_128_relevant[,2]*100
data_prob_specific_relevant <- data_prob_specific[data_prob_specific[,2]<0.999,]
data_prob_specific_relevant[,2] <- data_prob_specific_relevant[,2]*100
data_avg_set_relevant <- data_avg_set[data_avg_set[,2]<127.9,]
merged <- merge(merge(data_all_128_relevant,data_avg_set_relevant,by="x",all=T),data_prob_specific_relevant,by="x",all=T)
colnames(merged) <- c("x", "avg_all_128", "avg_avg_set", "avg_prob_specific")
merged[,"avg_avg_set"] <- merged[,"avg_avg_set"]/128*100
merged <- merged[,-4]
merged_melt <- reshape::melt(merged, id=c("x"))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line() +
ggplot2::scale_y_continuous(name="Wahrscheinlichkeit alle Eviction Sets zu finden (\\%)",
limits=c(75, 100),
breaks=seq(90,100,2)) +
ggplot2::scale_x_continuous(name="Anzahl an Adressen im Pool (x)",
limits=c(4000, 5000),
breaks=seq(4000,5000,200))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line() +
ggplot2::scale_y_continuous(name="Wahrscheinlichkeit alle Eviction Sets zu finden (\\%)",
limits=c(75, 100),
breaks=seq(90,100,2))
data_all_128_relevant <- data_all_128[data_all_128[,2]<0.9999,]
data_all_128_relevant[,2] <- data_all_128_relevant[,2]*100
data_prob_specific_relevant <- data_prob_specific[data_prob_specific[,2]<0.9999,]
data_prob_specific_relevant[,2] <- data_prob_specific_relevant[,2]*100
data_avg_set_relevant <- data_avg_set[data_avg_set[,2]<127.9,]
merged <- merge(merge(data_all_128_relevant,data_avg_set_relevant,by="x",all=T),data_prob_specific_relevant,by="x",all=T)
colnames(merged) <- c("x", "avg_all_128", "avg_avg_set", "avg_prob_specific")
merged[,"avg_avg_set"] <- merged[,"avg_avg_set"]/128*100
merged <- merged[,-4]
merged_melt <- reshape::melt(merged, id=c("x"))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line() +
ggplot2::scale_y_continuous(name="Wahrscheinlichkeit alle Eviction Sets zu finden (\\%)",
limits=c(75, 100),
breaks=seq(90,100,2))
data_all_128_relevant <- data_all_128[data_all_128[,2]<0.999,]
data_all_128_relevant[,2] <- data_all_128_relevant[,2]*100
data_prob_specific_relevant <- data_prob_specific[data_prob_specific[,2]<1,]
data_prob_specific_relevant[,2] <- data_prob_specific_relevant[,2]*100
data_avg_set_relevant <- data_avg_set[data_avg_set[,2]<127.9,]
merged <- merge(merge(data_all_128_relevant,data_avg_set_relevant,by="x",all=T),data_prob_specific_relevant,by="x",all=T)
colnames(merged) <- c("x", "avg_all_128", "avg_avg_set", "avg_prob_specific")
merged[,"avg_avg_set"] <- merged[,"avg_avg_set"]/128*100
merged <- merged[,-4]
merged_melt <- reshape::melt(merged, id=c("x"))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line() +
ggplot2::scale_y_continuous(name="Wahrscheinlichkeit alle Eviction Sets zu finden (\\%)",
limits=c(75, 100),
breaks=seq(90,100,2))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line() +
ggplot2::scale_y_continuous(name="Wahrscheinlichkeit alle Eviction Sets zu finden (\\%)",
limits=c(80, 100),
breaks=seq(80,100,2)) +
ggplot2::scale_x_continuous(name="Anzahl an Adressen im Pool (x)",
limits=c(2000, 5000),
breaks=seq(2000,5000,500))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line() +
ggplot2::scale_y_continuous(name="Wahrscheinlichkeit alle Eviction Sets zu finden (\\%)",
limits=c(80, 100),
breaks=seq(80,100,2)) +
ggplot2::scale_x_continuous(name="Anzahl an Adressen im Pool (x)",
limits=c(2000, 5000),
breaks=seq(2000,5000,500))+
scale_fill_discrete(breaks=c("trt1","ctrl"))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line() +
ggplot2::scale_y_continuous(name="Wahrscheinlichkeit alle Eviction Sets zu finden (\\%)",
limits=c(80, 100),
breaks=seq(80,100,2)) +
ggplot2::scale_x_continuous(name="Anzahl an Adressen im Pool (x)",
limits=c(2000, 5000),
breaks=seq(2000,5000,500))+
ggplot2::scale_fill_discrete(breaks=c("trt1","ctrl"))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line() +
ggplot2::scale_y_continuous(name="Wahrscheinlichkeit alle Eviction Sets zu finden (\\%)",
limits=c(80, 100),
breaks=seq(80,100,2)) +
ggplot2::scale_x_continuous(name="Anzahl an Adressen im Pool (x)",
limits=c(2000, 5000),
breaks=seq(2000,5000,500))+
ggplot2::scale_fill_discrete(breaks=c("trt1","ctrl")) +
ggplot2::guides(fill=guide_legend(title=NULL))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line() +
ggplot2::scale_y_continuous(name="Wahrscheinlichkeit alle Eviction Sets zu finden (\\%)",
limits=c(80, 100),
breaks=seq(80,100,2)) +
ggplot2::scale_x_continuous(name="Anzahl an Adressen im Pool (x)",
limits=c(2000, 5000),
breaks=seq(2000,5000,500))+
ggplot2::scale_fill_discrete(breaks=c("trt1","ctrl")) +
ggplot2::guides(fill=ggplot2::guide_legend(title=NULL))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line() +
ggplot2::scale_y_continuous(name="Wahrscheinlichkeit alle Eviction Sets zu finden (\\%)",
limits=c(80, 100),
breaks=seq(80,100,2)) +
ggplot2::scale_x_continuous(name="Anzahl an Adressen im Pool (x)",
limits=c(2000, 5000),
breaks=seq(2000,5000,500))+
ggplot2::scale_fill_discrete(name="Experimental\nCondition",
breaks=c("ctrl", "trt1"),
labels=c("Control", "Treatment 1"))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line() +
ggplot2::scale_y_continuous(name="Wahrscheinlichkeit alle Eviction Sets zu finden (\\%)",
limits=c(80, 100),
breaks=seq(80,100,2)) +
ggplot2::scale_x_continuous(name="Anzahl an Adressen im Pool (x)",
limits=c(2000, 5000),
breaks=seq(2000,5000,500))+
ggplot2::scale_fill_continuous(name="Experimental\nCondition",
breaks=c("ctrl", "trt1"),
labels=c("Control", "Treatment 1"))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line() +
ggplot2::scale_y_continuous(name="Wahrscheinlichkeit alle Eviction Sets zu finden (\\%)",
limits=c(80, 100),
breaks=seq(80,100,2)) +
ggplot2::scale_x_continuous(name="Anzahl an Adressen im Pool (x)",
limits=c(2000, 5000),
breaks=seq(2000,5000,500))+
ggplot2::scale_fill_continuous(name="Experimental\nCondition",
labels=c("Control", "Treatment 1"))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line() +
ggplot2::scale_y_continuous(name="Wahrscheinlichkeit alle Eviction Sets zu finden (\\%)",
limits=c(80, 100),
breaks=seq(80,100,2)) +
ggplot2::scale_x_continuous(name="Anzahl an Adressen im Pool (x)",
limits=c(2000, 5000),
breaks=seq(2000,5000,500))+
ggplot2::scale_fill_continuous(name="Experimental\nCondition",
labels=c("Control", "Treatment 1")) +
ggplot2::theme(legend.text = element_text(colour="blue", size = 16, face = "bold"))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line() +
ggplot2::scale_y_continuous(name="Wahrscheinlichkeit alle Eviction Sets zu finden (\\%)",
limits=c(80, 100),
breaks=seq(80,100,2)) +
ggplot2::scale_x_continuous(name="Anzahl an Adressen im Pool (x)",
limits=c(2000, 5000),
breaks=seq(2000,5000,500))+
ggplot2::scale_fill_continuous(name="Experimental\nCondition",
labels=c("Control", "Treatment 1")) +
ggplot2::theme(legend.text = ggplot2::element_text(colour="blue", size = 16, face = "bold"))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line() +
ggplot2::scale_y_continuous(name="Wahrscheinlichkeit alle Eviction Sets zu finden (\\%)",
limits=c(80, 100),
breaks=seq(80,100,2)) +
ggplot2::scale_x_continuous(name="Anzahl an Adressen im Pool (x)",
limits=c(2000, 5000),
breaks=seq(2000,5000,500))+
ggplot2::scale_fill_continuous(name="Experimental\nCondition",
labels=c("Control", "Treatment 1")) +
ggplot2::theme(labels=c("Control", "Treatment 1"))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line() +
ggplot2::scale_y_continuous(name="Wahrscheinlichkeit alle Eviction Sets zu finden (\\%)",
limits=c(80, 100),
breaks=seq(80,100,2)) +
ggplot2::scale_x_continuous(name="Anzahl an Adressen im Pool (x)",
limits=c(2000, 5000),
breaks=seq(2000,5000,500))+
ggplot2::scale_fill_continuous(name="Experimental\nCondition",
labels=c("Control", "Treatment 1")) +
ggplot2::theme(legend.title = "")
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line() +
ggplot2::scale_y_continuous(name="Wahrscheinlichkeit alle Eviction Sets zu finden (\\%)",
limits=c(80, 100),
breaks=seq(80,100,2)) +
ggplot2::scale_x_continuous(name="Anzahl an Adressen im Pool (x)",
limits=c(2000, 5000),
breaks=seq(2000,5000,500))+
ggplot2::scale_fill_discrete(guide = guide_legend(reverse=TRUE))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line() +
ggplot2::scale_y_continuous(name="Wahrscheinlichkeit alle Eviction Sets zu finden (\\%)",
limits=c(80, 100),
breaks=seq(80,100,2)) +
ggplot2::scale_x_continuous(name="Anzahl an Adressen im Pool (x)",
limits=c(2000, 5000),
breaks=seq(2000,5000,500))+
ggplot2::scale_fill_discrete(guide = ggplot2::guide_legend(reverse=TRUE))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line() +
ggplot2::scale_y_continuous(name="Wahrscheinlichkeit alle Eviction Sets zu finden (\\%)",
limits=c(80, 100),
breaks=seq(80,100,2)) +
ggplot2::scale_x_continuous(name="Anzahl an Adressen im Pool (x)",
limits=c(2000, 5000),
breaks=seq(2000,5000,500))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line() +
ggplot2::scale_y_continuous(name="Wahrscheinlichkeit alle Eviction Sets zu finden (\\%)",
limits=c(80, 100),
breaks=seq(80,100,2)) +
ggplot2::scale_x_continuous(name="Anzahl an Adressen im Pool (x)",
limits=c(2000, 5000),
breaks=seq(2000,5000,500))+
guides(fill = guide_legend(reverse=TRUE))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line() +
ggplot2::scale_y_continuous(name="Wahrscheinlichkeit alle Eviction Sets zu finden (\\%)",
limits=c(80, 100),
breaks=seq(80,100,2)) +
ggplot2::scale_x_continuous(name="Anzahl an Adressen im Pool (x)",
limits=c(2000, 5000),
breaks=seq(2000,5000,500))+
ggplot2::guides(fill = ggplot2::guide_legend(reverse=TRUE))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line() +
ggplot2::scale_y_continuous(name="Wahrscheinlichkeit alle Eviction Sets zu finden (\\%)",
limits=c(80, 100),
breaks=seq(80,100,2)) +
ggplot2::scale_x_continuous(name="Anzahl an Adressen im Pool (x)",
limits=c(2000, 5000),
breaks=seq(2000,5000,500))+
ggplot2::guides(fill = ggplot2::guide_legend(reverse=TRUE)) +
ggplot2::scale_color_manual(labels = c("T999", "T888"), values = c("blue", "red"))
ggplot2::ggplot(merged_melt, ggplot2::aes(x, value, color=variable)) +
ggplot2::geom_line() +
ggplot2::scale_y_continuous(name="Wahrscheinlichkeit alle Eviction Sets zu finden (\\%)",
limits=c(80, 100),
breaks=seq(80,100,2)) +
ggplot2::scale_x_continuous(name="Anzahl an Adressen im Pool (x)",
limits=c(2000, 5000),
breaks=seq(2000,5000,500))
setwd("~/MA_2/master-moritz_krebbel-drive_by_cache_attacks/code/r/store_forward_plot")
page_size <- 4096
start_add <- 174637056/page_size + 63
times <- as.vector(sapply((scan("times.txt", character(), quote = "")), function(x){
if(grepl("?",x,fixed=TRUE)){
as.integer(substr(x,1,nchar(x)-1))*-1
} else as.integer(x)
}))
real_times <- sapply(times, function(x){if(x <0) x*-1 else x})
all <- sort(as.integer(scan("all_blocks.txt", character(), quote = ""))/page_size-start_add)
diff <- unlist(sapply(1:length(all), function(i){if(i>0)all[i]-all[i-1] else all[i]}))
set1 <- as.integer(scan("set1.txt", character(), quote = ""))/page_size-start_add
set2 <- as.integer(scan("set2.txt", character(), quote = ""))/page_size-start_add
set3 <- as.integer(scan("set3.txt", character(), quote = ""))/page_size-start_add
set4 <- as.integer(scan("set4.txt", character(), quote = ""))/page_size-start_add
merged <- sort(c(set1,set2,set3,set4))
non_valid <- all[!(all %in% merged)]
start <- all[6]-10
end <- all[8]+20
plot(start:end, real_times[start:end], pch=20,
xlab="4KiB block index", ylab="SAB timer value")
colliding_add_pos <- which(times[start:end] < 0) + start - 1
colliding_add_pos_valid <- colliding_add_pos[colliding_add_pos %in% merged]
colliding_add_pos_non_valid <- colliding_add_pos[!(colliding_add_pos %in% merged)]
points(colliding_add_pos_valid, real_times[colliding_add_pos_valid], col = "blue")
points(colliding_add_pos_non_valid, real_times[colliding_add_pos_non_valid], col = "red")
plot(start:end, real_times[start:end], pch=20,
xlab="4KiB block index", ylab="SAB timer value")
colliding_add_pos <- which(times[start:end] < 0) + start - 1
colliding_add_pos_valid <- colliding_add_pos[colliding_add_pos %in% merged]
colliding_add_pos_non_valid <- colliding_add_pos[!(colliding_add_pos %in% merged)]
points(colliding_add_pos, real_times[colliding_add_pos], col = "blue")
plot(c(-1, 26), 0:1, type = "n", axes = FALSE)
text(0:25, 0.6, 0:25, cex = 0.5)
points(0:25, rep(0.3, 26), pch = 0:25, bg = "grey", col = "blue")
start <- all[6]-10
end <- all[8]+20
plot(start:end, real_times[start:end], pch=20,
xlab="4KiB block index", ylab="SAB timer value")
colliding_add_pos <- which(times[start:end] < 0) + start - 1
colliding_add_pos_valid <- colliding_add_pos[colliding_add_pos %in% merged]
colliding_add_pos_non_valid <- colliding_add_pos[!(colliding_add_pos %in% merged)]
points(colliding_add_pos, real_times[colliding_add_pos], col = "blue")
tikzPlot <- function(name, data){
require( tikzDevice )
tikz( name )
plot( data )
dev.off()
}
require( tikzDevice )
tikz( 'StoreForward_all_valid.tex' )
plot(start:end, real_times[start:end], pch=20,
xlab="4KiB block index", ylab="SAB timer value")
colliding_add_pos <- which(times[start:end] < 0) + start - 1
colliding_add_pos_valid <- colliding_add_pos[colliding_add_pos %in% merged]
colliding_add_pos_non_valid <- colliding_add_pos[!(colliding_add_pos %in% merged)]
points(colliding_add_pos, real_times[colliding_add_pos], col = "blue")
dev.off()
