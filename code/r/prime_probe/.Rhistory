Sys.time()
Sys.time()
Sys.time()
Sys.time()
Sys.time()
Sys.time()
sample(1:8192, 8192, replace = T)
unique(sample(1:8192, 8192, replace = T))
size(unique(sample(1:8192, 8192, replace = T)))
length(unique(sample(1:8192, 8192, replace = T)))
length(unique(sample(1:8192, 8192, replace = T)))
length(unique(sample(1:8192, 8192, replace = T)))
length(unique(sample(1:8192, 8192, replace = T)))
log(8192)
length(unique(sample(1:8192, 8192*2, replace = T)))
length(unique(sample(1:8192, 8192*2, replace = T)))
length(unique(sample(1:8192, 8192*2, replace = T)))
length(unique(sample(1:8192, 8192*2, replace = T)))
length(unique(sample(1:8192, 8192*2, replace = T)))
length(unique(sample(1:8192, 8192*9, replace = T)))
length(unique(sample(1:8192, 8192*9, replace = T)))
length(unique(sample(1:8192, 8192*9, replace = T)))
length(unique(sample(1:8192, 8192*9, replace = T)))
(table(sample(1:128, 128*16, replace = T)))
(table(sample(1:128, 128*16, replace = T))) > 16
length((table(sample(1:128, 128*16, replace = T))) > 16)
sum((table(sample(1:128, 128*16, replace = T))) > 16)
sum((table(sample(1:128, 128*16, replace = T))) > 16)
sum((table(sample(1:128, 128*16, replace = T))) > 16)
sum((table(sample(1:128, 128*16, replace = T))) > 16)
sum((table(sample(1:128, 128*16, replace = T))) > 16)
sum((table(sample(1:128, 128*16, replace = T))) > 16)
sum((table(sample(1:128, 128*16*2, replace = T))) > 16)
sum((table(sample(1:128, 128*16*2, replace = T))) > 16)
sum((table(sample(1:128, 128*16*2, replace = T))) >= 16)
sum((table(sample(1:128, 128*16, replace = T))) >= 16)
sum((table(sample(1:128, 128*16, replace = T))) >= 16)
sum((table(sample(1:128, 128*16, replace = T))) >= 16)
sum((table(sample(1:128, 128*16, replace = T))) >= 16)
sum((table(sample(1:128, 128*16, replace = T))) >= 16)
sum((table(sample(1:128, 128*16*1.5, replace = T))) >= 16)
sum((table(sample(1:128, 128*16*1.5, replace = T))) >= 16)
sum((table(sample(1:128, 128*16*1.7, replace = T))) >= 16)
sum((table(sample(1:128, 128*16*1.9, replace = T))) >= 16)
sum((table(sample(1:128, 128*16*1.9, replace = T))) >= 16)
sum((table(sample(1:128, 128*16*1.9, replace = T))) >= 16)
sum((table(sample(1:128, 128*16*1.9, replace = T))) >= 16)
sum((table(sample(1:128, 128*16*2, replace = T))) >= 16)
table(sample(1:128, 128*16*2, replace = T)))
table(sample(1:128, 128*16*2, replace = T))
table(sample(1:128, 128*16*2, replace = T))[1]
sum(table(sample(1:128, 128*16*2, replace = T))[1] >= 16)
sum(table(sample(1:128, 128*16*2, replace = T))[1] >= 16)
sum(table(sample(1:128, 128*16*2, replace = T))[1] >= 16)
sum(table(sample(1:128, 128*16*2, replace = T))[1] >= 16)
sum(table(sample(1:128, 128*16, replace = T))[1] >= 16)
for(i in 1:1000)
sum(table(sample(1:128, 128*16, replace = T))[1] >= 16)
for(i in 1:1000){
sum(table(sample(1:128, 128*16, replace = T))[1] >= 16)
}
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- sum(table(sample(1:128, 128*16, replace = T))[1] >= 16)
}
sum(l)
Reduce("+", l)
Reduce("+", l)
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- sum(table(sample(1:128, 128*16, replace = T))[1] >= 16)
}
Reduce("+", l)
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- sum(table(sample(1:128, 128*16, replace = T))[1] >= 16)
}
Reduce("+", l)
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- sum(table(sample(1:128, 128*16, replace = T))[1] >= 16)
}
Reduce("+", l)
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- sum(table(sample(1:128, 128*16, replace = T)) >= 16)
}
Reduce("+", l)
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- sum(table(sample(1:128, 128*16, replace = T)) >= 16)
}
Reduce("+", l)/1000
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- sum(table(sample(1:128, 128*16, replace = T)) >= 16)
}
Reduce("+", l)/1000
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- sum(table(sample(1:128, 128*16, replace = T)) >= 16)
}
Reduce("+", l)/1000
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- sum(table(sample(1:128, 128*10, replace = T)) >= 10)
}
Reduce("+", l)/1000
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- sum(table(sample(1:128, 128*10, replace = T)) >= 10)
}
Reduce("+", l)/1000
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- sum(table(sample(1:128, 128*5, replace = T)) >= 5)
}
Reduce("+", l)/1000
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- sum(table(sample(1:128, 128*16, replace = T)) >= 16)
}
Reduce("+", l)/1000
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- sum(table(sample(1:128, 128*1, replace = T)) >= 1)
}
Reduce("+", l)/1000
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- sum(table(sample(1:128, 128*1, replace = T))[1] >= 1)
}
Reduce("+", l)/1000
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- (table(sample(1:128, 128*1, replace = T))[1] >= 1)
}
table(sample(1:128, 128*1, replace = T))
sum(table(sample(1:128, 128*1, replace = T))
)
sum(table(sample(1:10, 10, replace = T))
)
table(sample(1:10, 10, replace = T))
3 %in% c(3,2)
3 %in% c(2)
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- 1 %in% sample(1:128, 128*1, replace = T)
}
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- sum(1 %in% sample(1:128, 128*1, replace = T))
}
Reduce("+", l)/1000
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- sum(sample(1:128, 128*1 %in% 1, replace = T))
}
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- sum(sample(1:128, 128*1, replace = T) %in% 1)
}
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- sum(sample(1:128, 128*16, replace = T) %in% 1) >= 16
}
Reduce("+", l)/1000
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- sum(sample(1:128, 128*16, replace = T) %in% 1) >= 16
}
Reduce("+", l)/1000
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- sum(sample(1:128, 128*16, replace = T) %in% 1) >= 16
}
Reduce("+", l)/1000
0,539*128
0.539*128
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- sum(sample(1:2, 2, replace = T) %in% 1) >= 1
}
Reduce("+", l)/1000
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- sum(sample(1:2, 2, replace = T) %in% 1) >= 1
}
Reduce("+", l)/1000
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- sum(sample(1:2, 2, replace = T) %in% 1) >= 1
}
Reduce("+", l)/1000
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- sum(sample(1:3, 3, replace = T) %in% 1) >= 1
}
Reduce("+", l)/1000
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- sum(sample(1:3, 3, replace = T) %in% 1) >= 1
}
Reduce("+", l)/1000
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- sum(sample(1:3, 3, replace = T) %in% 1) >= 1
}
Reduce("+", l)/1000
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- sum(sample(1:3, 3, replace = T) %in% 1) >= 1
}
Reduce("+", l)/1000
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- sum(sample(1:3, 3, replace = T) %in% 1) >= 1
}
Reduce("+", l)/1000
l <- list()
for(i in 1:1000){
l[[length(l)+1]] <- sum(sample(1:3, 3, replace = T) %in% 1) >= 1
}
Reduce("+", l)/1000
n<-10000
l <- 1:n
for(i in 1:n){
l[i] <- sum(sample(1:3, 3, replace = T) %in% 1) >= 1
}
Reduce("+", l)/n
n<-10000
l <- 1:n
for(i in 1:n){
l[i] <- sum(sample(1:3, 3, replace = T) %in% 1) >= 1
}
Reduce("+", l)/n
7/9
19/27
175/256
n<-100000
l <- 1:n
for(i in 1:n){
l[i] <- sum(sample(1:4, 4, replace = T) %in% 1) >= 1
}
Reduce("+", l)/n
n<-100000
l <- 1:n
for(i in 1:n){
l[i] <- sum(sample(1:5, 5, replace = T) %in% 1) >= 1
}
Reduce("+", l)/n
n<-100000
l <- 1:n
for(i in 1:n){
l[i] <- sum(sample(1:3, 3, replace = T) %in% 1) >= 2
}
Reduce("+", l)/n
7/2
7/27
4/27
n<-100000
l <- 1:n
for(i in 1:n){
l[i] <- sum(sample(1:3, 3, replace = T) %in% 1) >= 2
}
Reduce("+", l)/n
n<-100000
l <- 1:n
for(i in 1:n){
l[i] <- sum(sample(1:128, 128, replace = T) %in% 1) >= 16
}
Reduce("+", l)/n
n<-100000
l <- 1:n
for(i in 1:n){
l[i] <- sum(sample(1:128, 128*16, replace = T) %in% 1) >= 16
}
Reduce("+", l)/n
setwd("~/MA_2/master-moritz_krebbel-drive_by_cache_attacks//code/r/prime_probe/")
plumber::plumb("plumber.R")$run(port=8000)
