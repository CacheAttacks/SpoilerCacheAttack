l[i] <- sum(table(sample(1:4, 90, replace = T)) >= 16)
}
sum(sapply(l,function(x){x==4}))/n
n<-100000
l <- 1:n
for(i in 1:n){
l[i] <- sum(table(sample(1:4, 50, replace = T)) >= 16)
}
sum(sapply(l,function(x){x==4}))/n
n<-100000
l <- 1:n
for(i in 1:n){
l[i] <- sum(table(sample(1:4, 70, replace = T)) >= 16)
}
sum(sapply(l,function(x){x==4}))/n
n<-10000
l <- 1:n
for(i in 1:n){
l[i] <- sum(table(sample(1:4, 60, replace = T)) >= 16)
}
sum(sapply(l,function(x){x==4}))/n
n<-10000
l <- 1:n
for(i in 1:n){
l[i] <- sum(table(sample(1:4, 60, replace = T)) >= 16)
}
sum(sapply(l,function(x){x==4}))/n
n<-10000
l <- 1:n
for(i in 1:n){
l[i] <- sum(table(sample(1:4, 64, replace = T)) >= 16)
}
sum(sapply(l,function(x){x==4}))/n
n<-100000
l <- 1:n
for(i in 1:n){
l[i] <- sum(table(sample(1:4, 64, replace = T)) >= 16)
}
sum(sapply(l,function(x){x==4}))/n
n<-100000
l <- 1:n
for(i in 1:n){
l[i] <- sum(table(sample(1:4, 70, replace = T)) >= 16)
}
sum(sapply(l,function(x){x==4}))/n
n<-100000
l <- 1:n
for(i in 1:n){
l[i] <- sum(table(sample(1:2, 5, replace = T)) >= 2)
}
sum(sapply(l,function(x){x==4}))/n
sum(sapply(l,function(x){x==2}))/n
0.62521*32
sapply(strtoi(c("0xaae","0xb96")), function(x) floor(x/64))
sapply(strtoi(c("0xb97","0xbb5")), function(x) floor(x/64))
sapply(strtoi(c("0xd4e","0xe54")), function(x) floor(x/64))
sapply(strtoi(c("0x74d","0x795")), function(x) floor(x/64))
sapply(strtoi(c("0x3a7","0x4fa")), function(x) floor(x/64))
sapply(strtoi(c("0x9a2","0xb38")), function(x) floor(x/64))
sapply(strtoi(c(paste0("0x","816"),paste0("0x","85e"))), function(x) floor(x/64))
sapply(strtoi(c(paste0("0x","b77"),paste0("0x","c5f"))), function(x) floor(x/64))
sapply(strtoi(c(paste0("0x","c60"),paste0("0x","c7e"))), function(x) floor(x/64))
sapply(strtoi(c(paste0("0x","e17"),paste0("0x","f1d"))), function(x) floor(x/64))
sapply(strtoi(c(paste0("0x","914"),paste0("0x","a6a"))), function(x) floor(x/64))
sapply(strtoi(c(paste0("0x","a6b"),paste0("0x","c01"))), function(x) floor(x/64))
sapply(strtoi(c(paste0("0x","470"),paste0("0x","5c3"))), function(x) floor(x/64))
sapply(strtoi(c(paste0("0x","b77"),paste0("0x","c5f"))), function(x) floor(x/64))
sapply(strtoi(c(paste0("0x","b77"),paste0("0x","f1d"))), function(x) floor(x/64))
sample(1:64,64)
Reduce(function(x,y) Paste(x,y), sample(1:64,64))
Reduce(function(x,y) paste(x,y), sample(1:64,64))
i <- 64
paste0("int permutation", i, "[] = {",
Reduce(function(x,y) paste(x,y,sep=", "), sample(1:i,i)), "};")
i <- 65
paste0("int permutation", i, "[] = {",
Reduce(function(x,y) paste(x,y,sep=", "), sample(1:i,i)), "};")
paste0("int permutation", i, "[] = {",
Reduce(function(x,y) paste(x,y,sep=", "), sample(0:4095,i)), "};")
setwd("~/MA_2/data/new_benchs_factor_1/normal")
files <- list.files()
block_count <- sapply(files, function(x) as.integer(substr(x, 1, 4)))
important_attributes <- list("lines aka memory-blocks" = "[0-9]+$",
"ngroups:" = "[0-9]+$",
"Eviction set total time:" = "\\s[0-9]+\\s",
"runtime expand:" = ".+")
filter_data_from_file <- function(file_name){
file_attributes <- sapply(1:length(important_attributes),function(x)list())
names(file_attributes) <- names(important_attributes)
file_data <- readLines(file_name)
#phaseCounter <- 0
#phaseCounterFailed <- 0
#between <- FALSE
#get attributes
for(i in 1:length(file_data)){
line <- file_data[i]
#if(between){
#  if(is.na(as.numeric(substr(line,nchar(line),nchar(line))))){
#    phaseCounterFailed <- phaseCounterFailed + 1
#  }
#  phaseCounter <- phaseCounter + 1
#}
for(important_attribute in names(important_attributes)){
if(grepl(important_attribute, line, fixed=TRUE)){
#print(important_attribute)
data <- stringr::str_extract(line,important_attributes[[important_attribute]])
if(!is.na(as.integer(data))){
data <- as.integer(data)
}
file_attributes[[important_attribute]][[length(file_attributes[[important_attribute]])+1]] <- data
}
}
if(grepl("iterations:", line, fixed=TRUE)){
file_attributes[["iteration_count"]][[length(file_attributes[["iteration_count"]])+1]] <- as.numeric(stringr::str_extract(line,"[0-9]+$"))
}
if(grepl("iterations contract failed", line, fixed=TRUE)){
file_attributes[["iteration_count_failed"]][[length(file_attributes[["iteration_count_failed"]])+1]] <- as.numeric(stringr::str_extract(line,"[0-9]+$"))
}
#if(grepl("INFO END", line, fixed=TRUE)){
#between <- TRUE
#phaseCounter <- 0
#phaseCounterFailed <- 0
#}
#if(grepl("es search canceled!", line, fixed=TRUE)){
#between <- FALSE
#file_attributes[["iteration_count"]][[length(file_attributes[["iteration_count"]])+1]] <- phaseCounter
#file_attributes[["iteration_count_failed"]][[length(file_attributes[["iteration_count_failed"]])+1]] <- phaseCounterFailed
#}
}
df <- data.frame(matrix(unlist(file_attributes), nrow=20), stringsAsFactors = F)
df[,1] <- as.numeric(df[,1])
df[,2] <- as.numeric(df[,2])
df[,3] <- as.numeric(df[,3])
df[,5] <- as.numeric(df[,5])
df[,6] <- as.numeric(df[,6])
colnames(df) <- c("memBlocks", "NumberEs", "Time", "TimePhases", "IterationCount", "IterationCountFailed")
return(df)
}
getTime <- function(df){
newdf <- data.frame("expand_sec"=numeric(), "contract_sec"=numeric(),
"collect_sec"=numeric(), "datahandling_sec"=numeric(),
"expand"=numeric(), "contract"=numeric(),
"collect"=numeric(), "datahandling"=numeric())
timePhases <- df[,4]
for(line in timePhases){
splitLine <- strsplit(line, ",")
values <- sapply(splitLine[[1]], function(x) tail(strsplit(x,"\\s")[[1]],1))
values <- sapply(values, function(x) as.numeric(strsplit(x,"\\(")[[1]][1]))
newdf[nrow(newdf)+1,] <- c(values* df[nrow(newdf)+1,"Time"], values)
}
return(cbind(df[,-4],newdf))
}
data_df <- NULL
for(file in files){
data_df <- rbind(data_df, filter_data_from_file(file))
}
data_df_time <- getTime(data_df)
cut_data_df <- data_df_time[data_df_time[,3]<20000,]
cut_data_df <- data_df_time
mean_data_df <- aggregate(cut_data_df[, 2:13], list(cut_data_df$memBlocks), mean)
colnames(mean_data_df) <- c("blocks","mean_es","mean_time", colnames(data_df_time)[4:13])
median_data_df <- aggregate(cut_data_df[, 2:13], list(cut_data_df$memBlocks), median)
median_data_df[,"expand"] <- sapply(median_data_df[,"expand"], function(x) paste0(round(x*100), "\\%"))
median_data_df[,"contract"] <- sapply(median_data_df[,"contract"], function(x) paste0(round(x*100), "\\%"))
median_data_df[,"collect"] <- sapply(median_data_df[,"collect"], function(x) paste0(round(x*100,1), "\\%"))
median_data_df[,"Time"] <- sapply(median_data_df[,"Time"], function(x) paste0(round(x), "s"))
median_data_df[,"IterationCountFailed"] <- round(median_data_df[,"IterationCountFailed"])
View(median_data_df)
data_prob_specific <- data.frame(x=2048:4000, avg=c(0.434037, 0.434815, 0.435593, 0.436372, 0.43715, 0.437928, 0.438706,
0.439484, 0.440262, 0.44104, 0.441818, 0.442596, 0.443374, 0.444152,
0.44493, 0.445708, 0.446486, 0.447264, 0.448041, 0.448819, 0.449597,
0.450374, 0.451152, 0.451929, 0.452707, 0.453484, 0.454261, 0.455038,
0.455815, 0.456592, 0.457369, 0.458146, 0.458923, 0.459699, 0.460476,
0.461252, 0.462029, 0.462805, 0.463581, 0.464357, 0.465133, 0.465909,
0.466684, 0.46746, 0.468235, 0.46901, 0.469786, 0.470561, 0.471335,
0.47211, 0.472885, 0.473659, 0.474433, 0.475208, 0.475982, 0.476755,
0.477529, 0.478303, 0.479076, 0.479849, 0.480622, 0.481395, 0.482168,
0.48294, 0.483712, 0.484484, 0.485256, 0.486028, 0.4868, 0.487571,
0.488342, 0.489113, 0.489884, 0.490654, 0.491425, 0.492195, 0.492965,
0.493734, 0.494504, 0.495273, 0.496042, 0.496811, 0.49758, 0.498348,
0.499116, 0.499884, 0.500651, 0.501419, 0.502186, 0.502953, 0.503719,
0.504486, 0.505252, 0.506018, 0.506783, 0.507549, 0.508314, 0.509079,
0.509843, 0.510607, 0.511371, 0.512135, 0.512898, 0.513662, 0.514424,
0.515187, 0.515949, 0.516711, 0.517473, 0.518234, 0.518995, 0.519756,
0.520516, 0.521276, 0.522036, 0.522796, 0.523555, 0.524314, 0.525072,
0.525831, 0.526589, 0.527346, 0.528103, 0.52886, 0.529617, 0.530373,
0.531129, 0.531884, 0.53264, 0.533394, 0.534149, 0.534903, 0.535657,
0.53641, 0.537163, 0.537916, 0.538668, 0.53942, 0.540172, 0.540923,
0.541674, 0.542424, 0.543174, 0.543924, 0.544673, 0.545422, 0.546171,
0.546919, 0.547667, 0.548414, 0.549161, 0.549907, 0.550653, 0.551399,
0.552145, 0.552889, 0.553634, 0.554378, 0.555122, 0.555865, 0.556608,
0.55735, 0.558092, 0.558834, 0.559575, 0.560316, 0.561056, 0.561796,
0.562535, 0.563274, 0.564012, 0.56475, 0.565488, 0.566225, 0.566962,
0.567698, 0.568434, 0.569169, 0.569904, 0.570639, 0.571372, 0.572106,
0.572839, 0.573571, 0.574304, 0.575035, 0.575766, 0.576497, 0.577227,
0.577957, 0.578686, 0.579415, 0.580143, 0.580871, 0.581598, 0.582324,
0.583051, 0.583776, 0.584502, 0.585226, 0.585951, 0.586674, 0.587398,
0.58812, 0.588842, 0.589564, 0.590285, 0.591006, 0.591726, 0.592446,
0.593165, 0.593883, 0.594601, 0.595319, 0.596036, 0.596752, 0.597468,
0.598183, 0.598898, 0.599612, 0.600326, 0.601039, 0.601752, 0.602464,
0.603175, 0.603886, 0.604597, 0.605307, 0.606016, 0.606725, 0.607433,
0.608141, 0.608848, 0.609554, 0.61026, 0.610966, 0.61167, 0.612375,
0.613078, 0.613781, 0.614484, 0.615186, 0.615887, 0.616588, 0.617288,
0.617987, 0.618686, 0.619385, 0.620083, 0.62078, 0.621476, 0.622172,
0.622868, 0.623563, 0.624257, 0.624951, 0.625644, 0.626336, 0.627028,
0.627719, 0.62841, 0.6291, 0.629789, 0.630478, 0.631166, 0.631853,
0.63254, 0.633226, 0.633912, 0.634597, 0.635281, 0.635965, 0.636648,
0.637331, 0.638013, 0.638694, 0.639375, 0.640055, 0.640734, 0.641413,
0.642091, 0.642768, 0.643445, 0.644121, 0.644796, 0.645471, 0.646146,
0.646819, 0.647492, 0.648164, 0.648836, 0.649507, 0.650177, 0.650847,
0.651515, 0.652184, 0.652851, 0.653518, 0.654185, 0.65485, 0.655515,
0.65618, 0.656843, 0.657506, 0.658168, 0.65883, 0.659491, 0.660151,
0.660811, 0.66147, 0.662128, 0.662786, 0.663442, 0.664099, 0.664754,
0.665409, 0.666063, 0.666716, 0.667369, 0.668021, 0.668673, 0.669323,
0.669973, 0.670623, 0.671271, 0.671919, 0.672566, 0.673213, 0.673859,
0.674504, 0.675148, 0.675792, 0.676435, 0.677077, 0.677719, 0.678359,
0.679, 0.679639, 0.680278, 0.680916, 0.681553, 0.68219, 0.682826,
0.683461, 0.684095, 0.684729, 0.685362, 0.685994, 0.686626, 0.687257,
0.687887, 0.688516, 0.689145, 0.689773, 0.6904, 0.691027, 0.691652,
0.692278, 0.692902, 0.693525, 0.694148, 0.69477, 0.695392, 0.696012,
0.696632, 0.697252, 0.69787, 0.698488, 0.699105, 0.699721, 0.700336,
0.700951, 0.701565, 0.702178, 0.702791, 0.703403, 0.704014, 0.704624,
0.705234, 0.705842, 0.706451, 0.707058, 0.707664, 0.70827, 0.708875,
0.70948, 0.710083, 0.710686, 0.711288, 0.711889, 0.71249, 0.71309,
0.713689, 0.714287, 0.714884, 0.715481, 0.716077, 0.716672, 0.717267,
0.717861, 0.718454, 0.719046, 0.719637, 0.720228, 0.720818, 0.721407,
0.721995, 0.722583, 0.72317, 0.723756, 0.724341, 0.724926, 0.725509,
0.726092, 0.726675, 0.727256, 0.727837, 0.728417, 0.728996, 0.729574,
0.730152, 0.730729, 0.731305, 0.73188, 0.732455, 0.733028, 0.733601,
0.734173, 0.734745, 0.735315, 0.735885, 0.736454, 0.737023, 0.73759,
0.738157, 0.738723, 0.739288, 0.739853, 0.740416, 0.740979, 0.741541,
0.742102, 0.742663, 0.743223, 0.743781, 0.74434, 0.744897, 0.745454,
0.746009, 0.746564, 0.747119, 0.747672, 0.748225, 0.748777, 0.749328,
0.749878, 0.750428, 0.750976, 0.751524, 0.752071, 0.752618, 0.753163,
0.753708, 0.754252, 0.754795, 0.755338, 0.755879, 0.75642, 0.75696,
0.7575, 0.758038, 0.758576, 0.759113, 0.759649, 0.760184, 0.760719,
0.761252, 0.761785, 0.762317, 0.762849, 0.763379, 0.763909, 0.764438,
0.764966, 0.765494, 0.76602, 0.766546, 0.767071, 0.767595, 0.768119,
0.768641, 0.769163, 0.769684, 0.770204, 0.770724, 0.771243, 0.77176,
0.772278, 0.772794, 0.773309, 0.773824, 0.774338, 0.774851, 0.775363,
0.775875, 0.776386, 0.776896, 0.777405, 0.777913, 0.778421, 0.778927,
0.779433, 0.779939, 0.780443, 0.780946, 0.781449, 0.781951, 0.782452,
0.782953, 0.783452, 0.783951, 0.784449, 0.784947, 0.785443, 0.785939,
0.786433, 0.786928, 0.787421, 0.787913, 0.788405, 0.788896, 0.789386,
0.789875, 0.790364, 0.790851, 0.791338, 0.791824, 0.79231, 0.792794,
0.793278, 0.793761, 0.794243, 0.794725, 0.795205, 0.795685, 0.796164,
0.796642, 0.797119, 0.797596, 0.798072, 0.798547, 0.799021, 0.799495,
0.799967, 0.800439, 0.80091, 0.801381, 0.80185, 0.802319, 0.802787,
0.803254, 0.80372, 0.804186, 0.804651, 0.805115, 0.805578, 0.80604,
0.806502, 0.806963, 0.807423, 0.807882, 0.80834, 0.808798, 0.809255,
0.809711, 0.810166, 0.810621, 0.811075, 0.811528, 0.81198, 0.812431,
0.812882, 0.813332, 0.813781, 0.814229, 0.814677, 0.815123, 0.815569,
0.816015, 0.816459, 0.816903, 0.817345, 0.817787, 0.818229, 0.818669,
0.819109, 0.819548, 0.819986, 0.820423, 0.82086, 0.821296, 0.821731,
0.822165, 0.822599, 0.823031, 0.823463, 0.823894, 0.824325, 0.824754,
0.825183, 0.825611, 0.826039, 0.826465, 0.826891, 0.827316, 0.82774,
0.828164, 0.828586, 0.829008, 0.829429, 0.82985, 0.830269, 0.830688,
0.831106, 0.831524, 0.83194, 0.832356, 0.832771, 0.833185, 0.833599,
0.834011, 0.834423, 0.834834, 0.835245, 0.835655, 0.836063, 0.836472,
0.836879, 0.837286, 0.837691, 0.838097, 0.838501, 0.838904, 0.839307,
0.839709, 0.840111, 0.840511, 0.840911, 0.84131, 0.841708, 0.842106,
0.842503, 0.842899, 0.843294, 0.843689, 0.844082, 0.844476, 0.844868,
0.845259, 0.84565, 0.84604, 0.84643, 0.846818, 0.847206, 0.847593,
0.847979, 0.848365, 0.84875, 0.849134, 0.849517, 0.8499, 0.850282,
0.850663, 0.851043, 0.851423, 0.851802, 0.85218, 0.852557, 0.852934,
0.85331, 0.853685, 0.85406, 0.854433, 0.854806, 0.855179, 0.85555,
0.855921, 0.856291, 0.85666, 0.857029, 0.857397, 0.857764, 0.858131,
0.858496, 0.858861, 0.859226, 0.859589, 0.859952, 0.860314, 0.860675,
0.861036, 0.861396, 0.861755, 0.862114, 0.862471, 0.862828, 0.863185,
0.86354, 0.863895, 0.864249, 0.864603, 0.864956, 0.865308, 0.865659,
0.866009, 0.866359, 0.866709, 0.867057, 0.867405, 0.867752, 0.868098,
0.868444, 0.868789, 0.869133, 0.869476, 0.869819, 0.870161, 0.870503,
0.870843, 0.871183, 0.871523, 0.871861, 0.872199, 0.872536, 0.872873,
0.873209, 0.873544, 0.873878, 0.874212, 0.874545, 0.874877, 0.875209,
0.87554, 0.87587, 0.8762, 0.876528, 0.876857, 0.877184, 0.877511,
0.877837, 0.878162, 0.878487, 0.878811, 0.879135, 0.879457, 0.879779,
0.880101, 0.880421, 0.880741, 0.88106, 0.881379, 0.881697, 0.882014,
0.882331, 0.882647, 0.882962, 0.883276, 0.88359, 0.883903, 0.884216,
0.884528, 0.884839, 0.88515, 0.885459, 0.885769, 0.886077, 0.886385,
0.886692, 0.886999, 0.887305, 0.88761, 0.887914, 0.888218, 0.888521,
0.888824, 0.889126, 0.889427, 0.889728, 0.890028, 0.890327, 0.890626,
0.890924, 0.891221, 0.891518, 0.891814, 0.892109, 0.892404, 0.892698,
0.892991, 0.893284, 0.893576, 0.893868, 0.894158, 0.894449, 0.894738,
0.895027, 0.895315, 0.895603, 0.89589, 0.896176, 0.896462, 0.896747,
0.897032, 0.897315, 0.897599, 0.897881, 0.898163, 0.898444, 0.898725,
0.899005, 0.899285, 0.899563, 0.899841, 0.900119, 0.900396, 0.900672,
0.900948, 0.901223, 0.901497, 0.901771, 0.902044, 0.902317, 0.902589,
0.90286, 0.903131, 0.903401, 0.90367, 0.903939, 0.904207, 0.904475,
0.904742, 0.905008, 0.905274, 0.905539, 0.905804, 0.906068, 0.906331,
0.906594, 0.906856, 0.907118, 0.907379, 0.907639, 0.907899, 0.908158,
0.908416, 0.908674, 0.908932, 0.909189, 0.909445, 0.9097, 0.909955,
0.91021, 0.910463, 0.910717, 0.910969, 0.911221, 0.911473, 0.911724,
0.911974, 0.912224, 0.912473, 0.912721, 0.912969, 0.913216, 0.913463,
0.913709, 0.913955, 0.9142, 0.914444, 0.914688, 0.914932, 0.915174,
0.915417, 0.915658, 0.915899, 0.91614, 0.916379, 0.916619, 0.916857,
0.917096, 0.917333, 0.91757, 0.917807, 0.918043, 0.918278, 0.918513,
0.918747, 0.918981, 0.919214, 0.919446, 0.919678, 0.91991, 0.920141,
0.920371, 0.920601, 0.92083, 0.921059, 0.921287, 0.921514, 0.921741,
0.921968, 0.922194, 0.922419, 0.922644, 0.922868, 0.923092, 0.923315,
0.923538, 0.92376, 0.923981, 0.924202, 0.924423, 0.924643, 0.924862,
0.925081, 0.9253, 0.925517, 0.925735, 0.925951, 0.926168, 0.926383,
0.926598, 0.926813, 0.927027, 0.927241, 0.927454, 0.927666, 0.927878,
0.92809, 0.928301, 0.928511, 0.928721, 0.928931, 0.929139, 0.929348,
0.929556, 0.929763, 0.92997, 0.930176, 0.930382, 0.930587, 0.930792,
0.930996, 0.9312, 0.931403, 0.931606, 0.931808, 0.93201, 0.932211,
0.932412, 0.932612, 0.932812, 0.933011, 0.93321, 0.933408, 0.933606,
0.933803, 0.934, 0.934196, 0.934392, 0.934587, 0.934782, 0.934976,
0.93517, 0.935363, 0.935556, 0.935748, 0.93594, 0.936131, 0.936322,
0.936512, 0.936702, 0.936891, 0.93708, 0.937269, 0.937457, 0.937644,
0.937831, 0.938018, 0.938204, 0.938389, 0.938574, 0.938759, 0.938943,
0.939127, 0.93931, 0.939493, 0.939675, 0.939857, 0.940038, 0.940219,
0.940399, 0.940579, 0.940758, 0.940937, 0.941116, 0.941294, 0.941472,
0.941649, 0.941825, 0.942002, 0.942177, 0.942353, 0.942528, 0.942702,
0.942876, 0.943049, 0.943222, 0.943395, 0.943567, 0.943739, 0.94391,
0.944081, 0.944251, 0.944421, 0.944591, 0.94476, 0.944928, 0.945096,
0.945264, 0.945431, 0.945598, 0.945764, 0.94593, 0.946096, 0.946261,
0.946426, 0.94659, 0.946754, 0.946917, 0.94708, 0.947242, 0.947404,
0.947566, 0.947727, 0.947888, 0.948048, 0.948208, 0.948367, 0.948526,
0.948685, 0.948843, 0.949001, 0.949158, 0.949315, 0.949472, 0.949628,
0.949784, 0.949939, 0.950094, 0.950248, 0.950402, 0.950556, 0.950709,
0.950862, 0.951014, 0.951166, 0.951318, 0.951469, 0.95162, 0.95177,
0.95192, 0.952069, 0.952219, 0.952367, 0.952516, 0.952664, 0.952811,
0.952958, 0.953105, 0.953251, 0.953397, 0.953543, 0.953688, 0.953833,
0.953977, 0.954121, 0.954264, 0.954408, 0.95455, 0.954693, 0.954835,
0.954976, 0.955118, 0.955259, 0.955399, 0.955539, 0.955679, 0.955818,
0.955957, 0.956096, 0.956234, 0.956372, 0.956509, 0.956646, 0.956783,
0.956919, 0.957055, 0.95719, 0.957326, 0.95746, 0.957595, 0.957729,
0.957862, 0.957996, 0.958129, 0.958261, 0.958393, 0.958525, 0.958657,
0.958788, 0.958919, 0.959049, 0.959179, 0.959309, 0.959438, 0.959567,
0.959695, 0.959824, 0.959951, 0.960079, 0.960206, 0.960333, 0.960459,
0.960585, 0.960711, 0.960836, 0.960962, 0.961086, 0.961211, 0.961334,
0.961458, 0.961581, 0.961704, 0.961827, 0.961949, 0.962071, 0.962193,
0.962314, 0.962435, 0.962555, 0.962675, 0.962795, 0.962915, 0.963034,
0.963153, 0.963271, 0.963389, 0.963507, 0.963625, 0.963742, 0.963859,
0.963975, 0.964091, 0.964207, 0.964323, 0.964438, 0.964553, 0.964667,
0.964781, 0.964895, 0.965009, 0.965122, 0.965235, 0.965348, 0.96546,
0.965572, 0.965683, 0.965795, 0.965906, 0.966016, 0.966127, 0.966237,
0.966346, 0.966456, 0.966565, 0.966674, 0.966782, 0.96689, 0.966998,
0.967105, 0.967213, 0.967319, 0.967426, 0.967532, 0.967638, 0.967744,
0.967849, 0.967954, 0.968059, 0.968164, 0.968268, 0.968372, 0.968475,
0.968578, 0.968681, 0.968784, 0.968886, 0.968988, 0.96909, 0.969191,
0.969293, 0.969393, 0.969494, 0.969594, 0.969694, 0.969794, 0.969893,
0.969992, 0.970091, 0.97019, 0.970288, 0.970386, 0.970483, 0.970581,
0.970678, 0.970775, 0.970871, 0.970967, 0.971063, 0.971159, 0.971254,
0.97135, 0.971444, 0.971539, 0.971633, 0.971727, 0.971821, 0.971914,
0.972007, 0.9721, 0.972193, 0.972285, 0.972377, 0.972469, 0.972561,
0.972652, 0.972743, 0.972833, 0.972924, 0.973014, 0.973104, 0.973193,
0.973283, 0.973372, 0.973461, 0.973549, 0.973638, 0.973726, 0.973813,
0.973901, 0.973988, 0.974075, 0.974162, 0.974248, 0.974334, 0.97442,
0.974506, 0.974591, 0.974677, 0.974762, 0.974846, 0.974931, 0.975015,
0.975099, 0.975182, 0.975266, 0.975349, 0.975432, 0.975514, 0.975597,
0.975679, 0.975761, 0.975842, 0.975924, 0.976005, 0.976086, 0.976167,
0.976247, 0.976327, 0.976407, 0.976487, 0.976566, 0.976645, 0.976724,
0.976803, 0.976882, 0.97696, 0.977038, 0.977116, 0.977193, 0.97727,
0.977348, 0.977424, 0.977501, 0.977577, 0.977653, 0.977729, 0.977805,
0.97788, 0.977956, 0.978031, 0.978105, 0.97818, 0.978254, 0.978328,
0.978402, 0.978476, 0.978549, 0.978622, 0.978695, 0.978768, 0.97884,
0.978912, 0.978984, 0.979056, 0.979128, 0.979199, 0.97927, 0.979341,
0.979412, 0.979483, 0.979553, 0.979623, 0.979693, 0.979762, 0.979832,
0.979901, 0.97997, 0.980039, 0.980107, 0.980175, 0.980244, 0.980312,
0.980379, 0.980447, 0.980514, 0.980581, 0.980648, 0.980715, 0.980781,
0.980847, 0.980913, 0.980979, 0.981045, 0.98111, 0.981175, 0.98124,
0.981305, 0.98137, 0.981434, 0.981498, 0.981562, 0.981626, 0.98169,
0.981753, 0.981816, 0.981879, 0.981942, 0.982005, 0.982067, 0.982129,
0.982191, 0.982253, 0.982315, 0.982376, 0.982437, 0.982498, 0.982559,
0.98262, 0.98268, 0.982741, 0.982801, 0.982861, 0.98292, 0.98298,
0.983039, 0.983098, 0.983157, 0.983216, 0.983275, 0.983333, 0.983391,
0.983449, 0.983507, 0.983565, 0.983622, 0.983679, 0.983737, 0.983793,
0.98385, 0.983907, 0.983963, 0.984019, 0.984075, 0.984131, 0.984187,
0.984242, 0.984298, 0.984353, 0.984408, 0.984463, 0.984517, 0.984572,
0.984626, 0.98468, 0.984734, 0.984788, 0.984841, 0.984894, 0.984948,
0.985001, 0.985054, 0.985106, 0.985159, 0.985211, 0.985263, 0.985315,
0.985367, 0.985419, 0.985471, 0.985522, 0.985573, 0.985624, 0.985675,
0.985726, 0.985776, 0.985827, 0.985877, 0.985927, 0.985977, 0.986026,
0.986076, 0.986125, 0.986175, 0.986224, 0.986273, 0.986321, 0.98637,
0.986419, 0.986467, 0.986515, 0.986563, 0.986611, 0.986658, 0.986706,
0.986753, 0.9868, 0.986848, 0.986894, 0.986941, 0.986988, 0.987034,
0.98708, 0.987127, 0.987173, 0.987218, 0.987264, 0.98731, 0.987355,
0.9874, 0.987445, 0.98749, 0.987535, 0.98758, 0.987624, 0.987669,
0.987713, 0.987757, 0.987801, 0.987844, 0.987888, 0.987932, 0.987975,
0.988018, 0.988061, 0.988104, 0.988147, 0.988189, 0.988232, 0.988274,
0.988317, 0.988359, 0.988401, 0.988442, 0.988484, 0.988525, 0.988567,
0.988608, 0.988649, 0.98869, 0.988731, 0.988772, 0.988812, 0.988853,
0.988893, 0.988933, 0.988973, 0.989013, 0.989053, 0.989092, 0.989132,
0.989171, 0.98921, 0.98925, 0.989289, 0.989327, 0.989366, 0.989405,
0.989443, 0.989481, 0.98952, 0.989558, 0.989596, 0.989633, 0.989671,
0.989709, 0.989746, 0.989783, 0.989821, 0.989858, 0.989895, 0.989931,
0.989968, 0.990005, 0.990041, 0.990077, 0.990114, 0.99015, 0.990186,
0.990221, 0.990257, 0.990293, 0.990328, 0.990364, 0.990399, 0.990434,
0.990469, 0.990504, 0.990539, 0.990573, 0.990608, 0.990642, 0.990676,
0.990711, 0.990745, 0.990779, 0.990812, 0.990846, 0.99088, 0.990913,
0.990947, 0.99098, 0.991013, 0.991046, 0.991079, 0.991112, 0.991144,
0.991177, 0.991209, 0.991242, 0.991274, 0.991306, 0.991338, 0.99137,
0.991402, 0.991434, 0.991465, 0.991497, 0.991528, 0.991559, 0.991591,
0.991622, 0.991653, 0.991683, 0.991714, 0.991745, 0.991775, 0.991806,
0.991836, 0.991866, 0.991897, 0.991927, 0.991956, 0.991986, 0.992016,
0.992046, 0.992075, 0.992104, 0.992134, 0.992163, 0.992192, 0.992221,
0.99225, 0.992279, 0.992307, 0.992336, 0.992365, 0.992393, 0.992421,
0.992449, 0.992478, 0.992506, 0.992534, 0.992561, 0.992589, 0.992617,
0.992644, 0.992672, 0.992699, 0.992726, 0.992753, 0.99278, 0.992807,
0.992834, 0.992861, 0.992888, 0.992914, 0.992941, 0.992967, 0.992994,
0.99302, 0.993046, 0.993072, 0.993098, 0.993124, 0.99315, 0.993175,
0.993201, 0.993226, 0.993252, 0.993277, 0.993302, 0.993328, 0.993353,
0.993378, 0.993402, 0.993427, 0.993452, 0.993477, 0.993501, 0.993526,
0.99355, 0.993574, 0.993598, 0.993623, 0.993647, 0.993671, 0.993694,
0.993718, 0.993742, 0.993765, 0.993789, 0.993812, 0.993836, 0.993859,
0.993882, 0.993905, 0.993928, 0.993951, 0.993974, 0.993997, 0.99402,
0.994042, 0.994065, 0.994087, 0.99411, 0.994132, 0.994154, 0.994176,
0.994199, 0.994221, 0.994243, 0.994264, 0.994286, 0.994308, 0.994329,
0.994351, 0.994372, 0.994394, 0.994415, 0.994436, 0.994458, 0.994479,
0.9945, 0.994521, 0.994541, 0.994562, 0.994583, 0.994604, 0.994624,
0.994645, 0.994665, 0.994685, 0.994706, 0.994726, 0.994746, 0.994766,
0.994786, 0.994806, 0.994826, 0.994846, 0.994865, 0.994885, 0.994904,
0.994924, 0.994943, 0.994963, 0.994982, 0.995001, 0.99502, 0.995039,
0.995058, 0.995077, 0.995096, 0.995115, 0.995134, 0.995152, 0.995171,
0.99519, 0.995208, 0.995226, 0.995245, 0.995263, 0.995281, 0.995299,
0.995317, 0.995335, 0.995353, 0.995371, 0.995389, 0.995407, 0.995425,
0.995442, 0.99546, 0.995477, 0.995495, 0.995512, 0.995529, 0.995547,
0.995564, 0.995581, 0.995598, 0.995615, 0.995632, 0.995649, 0.995666,
0.995682, 0.995699, 0.995716, 0.995732, 0.995749, 0.995765, 0.995782,
0.995798, 0.995814, 0.99583, 0.995847, 0.995863, 0.995879, 0.995895,
0.995911, 0.995926, 0.995942, 0.995958, 0.995974, 0.995989, 0.996005,
0.99602, 0.996036, 0.996051, 0.996067, 0.996082, 0.996097, 0.996112,
0.996127, 0.996143, 0.996158, 0.996172, 0.996187, 0.996202, 0.996217,
0.996232, 0.996246, 0.996261, 0.996276, 0.99629, 0.996305, 0.996319,
0.996334, 0.996348, 0.996362, 0.996376, 0.99639, 0.996405, 0.996419,
0.996433, 0.996447, 0.99646, 0.996474, 0.996488, 0.996502, 0.996516,
0.996529, 0.996543, 0.996556, 0.99657, 0.996583, 0.996597, 0.99661,
0.996623, 0.996637, 0.99665, 0.996663, 0.996676, 0.996689, 0.996702,
0.996715, 0.996728, 0.996741, 0.996754, 0.996766, 0.996779, 0.996792,
0.996804, 0.996817, 0.99683, 0.996842, 0.996855, 0.996867, 0.996879,
0.996892, 0.996904, 0.996916, 0.996928, 0.99694, 0.996952, 0.996964,
0.996976, 0.996988, 0.997, 0.997012, 0.997024, 0.997036, 0.997047,
0.997059, 0.997071, 0.997082, 0.997094, 0.997105, 0.997117, 0.997128,
0.99714, 0.997151, 0.997162, 0.997173, 0.997185, 0.997196, 0.997207,
0.997218, 0.997229, 0.99724, 0.997251, 0.997262, 0.997273, 0.997284,
0.997294, 0.997305, 0.997316, 0.997327, 0.997337, 0.997348, 0.997358,
0.997369, 0.997379, 0.99739, 0.9974, 0.997411, 0.997421, 0.997431,
0.997441, 0.997452, 0.997462, 0.997472, 0.997482, 0.997492, 0.997502,
0.997512, 0.997522, 0.997532, 0.997542, 0.997552, 0.997561, 0.997571,
0.997581, 0.99759, 0.9976, 0.99761, 0.997619, 0.997629, 0.997638,
0.997648, 0.997657, 0.997667, 0.997676, 0.997685, 0.997695, 0.997704,
0.997713, 0.997722, 0.997731, 0.99774, 0.997749, 0.997758, 0.997768,
0.997776, 0.997785, 0.997794, 0.997803, 0.997812, 0.997821, 0.99783,
0.997838, 0.997847, 0.997856, 0.997864, 0.997873, 0.997881, 0.99789,
0.997898, 0.997907, 0.997915, 0.997924, 0.997932, 0.997941, 0.997949,
0.997957, 0.997965, 0.997974, 0.997982, 0.99799, 0.997998, 0.998006))
View(data_prob_specific)
setwd("~/MA_2/master-moritz_krebbel-drive_by_cache_attacks//code/r/prime_probe/")
plumber::plumb("plumber.R")$run(port=8000)
setwd("~/MA_2/master-moritz_krebbel-drive_by_cache_attacks//code/r/prime_probe/")
plumber::plumb("plumber.R")$run(port=8000)
plumber::plumb("plumber.R")$run(port=8000)
plumber::plumb("plumber.R")$run(port=8000)
View(tmp_tbl)
plumber::plumb("plumber.R")$run(port=8000)
tbl_no_slowdown <- tmp_tbl
save(tbl_no_slowdown, file = "slowdown_test.RData")
save(tbl_no_slowdown, file = "slowdown_test.RData")
plumber::plumb("plumber.R")$run(port=8000)
tbl_both_5000 <- tmp_tbl
plumber::plumb("plumber.R")$run(port=8000)
tbl_no_slowdown <- tmp_tbl
save(tbl_no_slowdown, tbl_both_5000, file = "slowdown_test.RData")
View(tbl_both_5000)
save(tbl_no_slowdown, tbl_both_5000, file = "slowdown_test.RData")
plumber::plumb("plumber.R")$run(port=8000)
tbl_both_3000 <- tmp_tbl
save(tbl_no_slowdown, tbl_both_3000, tbl_both_5000, file = "slowdown_test.RData")
plumber::plumb("plumber.R")$run(port=8000)
plumber::plumb("plumber.R")$run(port=8000)
plumber::plumb("plumber.R")$run(port=8000)
plumber::plumb("plumber.R")$run(port=8000)
plumber::plumb("plumber.R")$run(port=8000)
plumber::plumb("plumber.R")$run(port=8000)
plumber::plumb("plumber.R")$run(port=8000)
plumber::plumb("plumber.R")$run(port=8000)
tbl_both_3000 <- tmp_tbl
tbl_both_2000 <- tmp_tbl
load("slowdown_test.RData")
rm(tbl_both_5000)
load("slowdown_test.RData")
View(tbl_both_3000)
View(tbl_both_2000)
save(tbl_no_slowdown, tbl_both_2000, tbl_both_3000, tbl_both_5000, file = "slowdown_test.RData")
plumber::plumb("plumber.R")$run(port=8000)
tbl_both_4000 <- tmp_tbl
save(tbl_no_slowdown, tbl_both_2000, tbl_both_3000, tbl_both_5000, file = "slowdown_test.RData")
plumber::plumb("plumber.R")$run(port=8000)
tbl_both_4000 <- tmp_tbl
save(tbl_no_slowdown, tbl_both_2000, tbl_both_3000, tbl_both_5000, file = "slowdown_test.RData")
plumber::plumb("plumber.R")$run(port=8000)
tbl_both_3000 <- tmp_tbl
save(tbl_no_slowdown, tbl_both_2000, tbl_both_3000, tbl_both_5000, file = "slowdown_test.RData")
plumber::plumb("plumber.R")$run(port=8000)
tbl_both_2000 <- tmp_tbl
save(tbl_no_slowdown, tbl_both_2000, tbl_both_3000, tbl_both_4000, tbl_both_5000, file = "slowdown_test_s_mp_div_2d_0.RData")
plumber::plumb("plumber.R")$run(port=8000)
tbl_both_1000 <- tmp_tbl
save(tbl_no_slowdown, tbl_both_1000, tbl_both_2000, tbl_both_3000, tbl_both_4000, tbl_both_5000, file = "slowdown_test_s_mp_div_2d_0.RData")
plumber::plumb("plumber.R")$run(port=8000)
tbl_10000_compare_div_2d_0 <- tmp_tbl
plumber::plumb("plumber.R")$run(port=8000)
tbl_10000_compare_div_2_0 <- tmp_tbl
save(tbl_no_slowdown, tbl_both_1000, tbl_both_2000, tbl_both_3000, tbl_both_4000, tbl_both_5000
tbl_10000_compare_div_2d_0, tbl_10000_compare_div_2_0, file = "slowdown_test_s_mp_div_2d_0.RData")
plumber::plumb("plumber.R")$run(port=8000)
tbl_10000_compare_rshd_1 <- tmp_tbl
save(tbl_no_slowdown, tbl_both_1000, tbl_both_2000, tbl_both_3000, tbl_both_4000, tbl_both_5000
tbl_10000_compare_div_2d_0, tbl_10000_compare_div_2_0, tbl_10000_compare_rshd_1, file = "slowdown_test_s_mp_div_2d_0.RData")
save(tbl_no_slowdown, tbl_both_1000, tbl_both_2000, tbl_both_3000, tbl_both_4000, tbl_both_5000,
tbl_10000_compare_div_2d_0, tbl_10000_compare_div_2_0, tbl_10000_compare_rshd_1, file = "slowdown_test_s_mp_div_2d_0.RData")
