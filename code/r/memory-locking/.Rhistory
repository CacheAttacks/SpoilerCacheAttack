126.371, 126.377, 126.383, 126.389, 126.395, 126.401, 126.407,
126.412, 126.418, 126.424, 126.43, 126.436, 126.441, 126.447,
126.453, 126.458, 126.464, 126.47, 126.475, 126.481, 126.486,
126.492, 126.498, 126.503, 126.509, 126.514, 126.52, 126.525, 126.53,
126.536, 126.541, 126.547, 126.552, 126.557, 126.563, 126.568,
126.573, 126.579, 126.584, 126.589, 126.594, 126.599, 126.605,
126.61, 126.615, 126.62, 126.625, 126.63, 126.635, 126.64, 126.645,
126.65, 126.655, 126.66, 126.665, 126.67, 126.675, 126.68, 126.685,
126.69, 126.695, 126.7, 126.705, 126.709, 126.714, 126.719, 126.724,
126.729, 126.733, 126.738, 126.743, 126.747, 126.752, 126.757,
126.761, 126.766, 126.771, 126.775, 126.78, 126.784, 126.789,
126.793, 126.798, 126.802, 126.807, 126.811, 126.816, 126.82,
126.825, 126.829, 126.833, 126.838, 126.842, 126.847, 126.851,
126.855, 126.859, 126.864, 126.868, 126.872, 126.877, 126.881,
126.885, 126.889, 126.893, 126.898, 126.902, 126.906, 126.91,
126.914, 126.918, 126.922, 126.926, 126.93, 126.934, 126.938,
126.942, 126.946, 126.95, 126.954, 126.958, 126.962, 126.966, 126.97,
126.974, 126.978, 126.982, 126.986, 126.989, 126.993, 126.997,
127.001, 127.005, 127.008, 127.012, 127.016, 127.02, 127.023,
127.027, 127.031, 127.035, 127.038, 127.042, 127.046, 127.049,
127.053, 127.056, 127.06, 127.064, 127.067, 127.071, 127.074,
127.078, 127.081, 127.085, 127.088, 127.092, 127.095, 127.099,
127.102, 127.106, 127.109, 127.112, 127.116, 127.119, 127.123,
127.126, 127.129, 127.133, 127.136, 127.139, 127.143, 127.146,
127.149, 127.152, 127.156, 127.159, 127.162, 127.165, 127.168,
127.172, 127.175, 127.178, 127.181, 127.184, 127.187, 127.191,
127.194, 127.197, 127.2, 127.203, 127.206, 127.209, 127.212, 127.215,
127.218, 127.221, 127.224, 127.227, 127.23, 127.233, 127.236,
127.239, 127.242, 127.245, 127.248, 127.251, 127.254, 127.257,
127.26, 127.262, 127.265, 127.268, 127.271, 127.274, 127.277,
127.279, 127.282, 127.285, 127.288, 127.291, 127.293, 127.296,
127.299, 127.301, 127.304, 127.307, 127.31, 127.312, 127.315,
127.318, 127.32, 127.323, 127.326, 127.328, 127.331, 127.333,
127.336, 127.339, 127.341, 127.344, 127.346, 127.349, 127.351,
127.354, 127.356, 127.359, 127.361, 127.364, 127.366, 127.369,
127.371, 127.374, 127.376, 127.379, 127.381, 127.384, 127.386,
127.388, 127.391, 127.393, 127.396, 127.398, 127.4, 127.403, 127.405,
127.407, 127.41, 127.412, 127.414, 127.417, 127.419, 127.421, 127.424,
127.426, 127.428, 127.43, 127.433, 127.435, 127.437, 127.439,
127.441, 127.444, 127.446, 127.448, 127.45, 127.452, 127.455,
127.457, 127.459, 127.461, 127.463, 127.465, 127.467, 127.469,
127.472, 127.474, 127.476, 127.478, 127.48, 127.482, 127.484,
127.486, 127.488, 127.49, 127.492, 127.494, 127.496, 127.498, 127.5,
127.502, 127.504, 127.506, 127.508, 127.51, 127.512, 127.514,
127.516, 127.518, 127.52, 127.522, 127.523, 127.525, 127.527,
127.529, 127.531, 127.533, 127.535, 127.537, 127.538, 127.54,
127.542, 127.544, 127.546, 127.548, 127.549, 127.551, 127.553,
127.555, 127.557, 127.558, 127.56, 127.562, 127.564, 127.565,
127.567, 127.569, 127.571, 127.572, 127.574, 127.576, 127.577,
127.579, 127.581, 127.582, 127.584, 127.586, 127.587, 127.589,
127.591, 127.592, 127.594, 127.596, 127.597, 127.599, 127.601,
127.602, 127.604, 127.605, 127.607, 127.609, 127.61, 127.612,
127.613, 127.615, 127.616, 127.618, 127.619, 127.621, 127.622,
127.624, 127.626, 127.627, 127.629, 127.63, 127.632, 127.633,
127.635, 127.636, 127.637, 127.639, 127.64, 127.642, 127.643,
127.645, 127.646, 127.648, 127.649, 127.65, 127.652, 127.653,
127.655, 127.656, 127.657, 127.659, 127.66, 127.662, 127.663,
127.664, 127.666, 127.667, 127.668, 127.67, 127.671, 127.672,
127.674, 127.675, 127.676, 127.678, 127.679, 127.68, 127.682,
127.683, 127.684, 127.686, 127.687, 127.688, 127.689, 127.691,
127.692, 127.693, 127.694, 127.696, 127.697, 127.698, 127.699,
127.701, 127.702, 127.703, 127.704, 127.706, 127.707, 127.708,
127.709, 127.71, 127.711, 127.713, 127.714, 127.715, 127.716,
127.717, 127.719, 127.72, 127.721, 127.722, 127.723, 127.724,
127.725, 127.726, 127.728, 127.729, 127.73, 127.731, 127.732,
127.733, 127.734, 127.735, 127.736, 127.738, 127.739, 127.74,
127.741, 127.742, 127.743, 127.744, 127.745, 127.746, 127.747,
127.748, 127.749, 127.75, 127.751, 127.752, 127.753, 127.754,
127.755, 127.756, 127.757, 127.758, 127.759, 127.76, 127.761,
127.762, 127.763, 127.764, 127.765, 127.766, 127.767, 127.768,
127.769, 127.77, 127.771, 127.772, 127.773, 127.774, 127.775,
127.776, 127.777, 127.778, 127.779, 127.779, 127.78, 127.781,
127.782, 127.783, 127.784, 127.785, 127.786, 127.787, 127.788,
127.788, 127.789, 127.79, 127.791, 127.792, 127.793, 127.794,
127.795, 127.795, 127.796, 127.797, 127.798, 127.799, 127.8, 127.8,
127.801, 127.802, 127.803, 127.804, 127.805, 127.805, 127.806,
127.807, 127.808, 127.809, 127.809, 127.81, 127.811, 127.812,
127.813, 127.813, 127.814, 127.815, 127.816, 127.817, 127.817,
127.818, 127.819, 127.82, 127.82, 127.821, 127.822, 127.823, 127.823,
127.824, 127.825, 127.826, 127.826, 127.827, 127.828, 127.828,
127.829, 127.83, 127.831, 127.831, 127.832, 127.833, 127.833,
127.834, 127.835, 127.836, 127.836, 127.837, 127.838, 127.838,
127.839, 127.84, 127.84, 127.841, 127.842, 127.842, 127.843, 127.844,
127.844, 127.845, 127.846, 127.846, 127.847, 127.848, 127.848,
127.849, 127.85, 127.85, 127.851, 127.851, 127.852, 127.853, 127.853,
127.854, 127.855, 127.855, 127.856, 127.856, 127.857, 127.858,
127.858, 127.859, 127.859, 127.86, 127.861, 127.861, 127.862,
127.862, 127.863, 127.864, 127.864, 127.865, 127.865, 127.866,
127.866, 127.867, 127.868, 127.868, 127.869, 127.869, 127.87, 127.87,
127.871, 127.871, 127.872, 127.873, 127.873, 127.874, 127.874,
127.875, 127.875, 127.876, 127.876, 127.877, 127.877, 127.878,
127.878, 127.879, 127.879, 127.88, 127.88, 127.881, 127.881, 127.882,
127.882, 127.883, 127.883, 127.884, 127.884, 127.885, 127.885,
127.886, 127.886, 127.887, 127.887, 127.888, 127.888, 127.889,
127.889, 127.89, 127.89, 127.891, 127.891, 127.892, 127.892, 127.893,
127.893, 127.894, 127.894, 127.894, 127.895, 127.895, 127.896,
127.896, 127.897, 127.897, 127.898, 127.898, 127.898, 127.899,
127.899, 127.9, 127.9, 127.901, 127.901, 127.901, 127.902, 127.902,
127.903, 127.903, 127.904, 127.904, 127.904, 127.905, 127.905,
127.906, 127.906, 127.906, 127.907, 127.907, 127.908, 127.908,
127.908, 127.909, 127.909, 127.91, 127.91, 127.91, 127.911, 127.911,
127.912, 127.912, 127.912, 127.913, 127.913, 127.913, 127.914,
127.914, 127.915, 127.915, 127.915, 127.916, 127.916, 127.916,
127.917, 127.917, 127.918, 127.918, 127.918, 127.919, 127.919,
127.919, 127.92, 127.92, 127.92, 127.921, 127.921, 127.921, 127.922,
127.922, 127.922, 127.923, 127.923, 127.923, 127.924, 127.924,
127.924, 127.925, 127.925, 127.925, 127.926, 127.926, 127.926,
127.927, 127.927, 127.927, 127.928, 127.928, 127.928, 127.929,
127.929, 127.929, 127.93, 127.93, 127.93, 127.93, 127.931, 127.931,
127.931, 127.932, 127.932, 127.932, 127.933, 127.933, 127.933,
127.933, 127.934, 127.934, 127.934, 127.935, 127.935, 127.935,
127.935, 127.936, 127.936, 127.936, 127.937, 127.937, 127.937,
127.937, 127.938, 127.938, 127.938, 127.938, 127.939, 127.939,
127.939, 127.94, 127.94, 127.94, 127.94, 127.941, 127.941, 127.941,
127.941, 127.942, 127.942, 127.942, 127.942, 127.943, 127.943,
127.943, 127.943, 127.944, 127.944, 127.944, 127.944, 127.945,
127.945, 127.945, 127.945, 127.946, 127.946, 127.946, 127.946,
127.947, 127.947, 127.947, 127.947, 127.948, 127.948, 127.948,
127.948, 127.948, 127.949, 127.949, 127.949, 127.949, 127.95, 127.95,
127.95, 127.95, 127.95, 127.951, 127.951, 127.951, 127.951, 127.952,
127.952, 127.952, 127.952, 127.952, 127.953, 127.953, 127.953,
127.953, 127.953, 127.954, 127.954, 127.954, 127.954, 127.954,
127.955, 127.955, 127.955, 127.955, 127.956, 127.956, 127.956,
127.956, 127.956, 127.956, 127.957, 127.957, 127.957, 127.957,
127.957, 127.958, 127.958, 127.958, 127.958, 127.958, 127.959,
127.959, 127.959, 127.959, 127.959, 127.959, 127.96, 127.96, 127.96,
127.96, 127.96, 127.961, 127.961, 127.961, 127.961, 127.961, 127.961,
127.962, 127.962, 127.962, 127.962, 127.962, 127.962, 127.963,
127.963, 127.963, 127.963, 127.963, 127.963, 127.964, 127.964,
127.964, 127.964, 127.964, 127.964, 127.965, 127.965, 127.965,
127.965, 127.965, 127.965, 127.966, 127.966, 127.966, 127.966,
127.966, 127.966, 127.966, 127.967, 127.967, 127.967, 127.967,
127.967, 127.967, 127.967, 127.968, 127.968, 127.968, 127.968,
127.968, 127.968, 127.969, 127.969, 127.969, 127.969, 127.969,
127.969, 127.969, 127.969, 127.97, 127.97, 127.97, 127.97, 127.97,
127.97, 127.97, 127.971, 127.971, 127.971, 127.971, 127.971, 127.971,
127.971, 127.971, 127.972, 127.972, 127.972, 127.972, 127.972,
127.972, 127.972, 127.973, 127.973, 127.973, 127.973, 127.973,
127.973, 127.973, 127.973, 127.973, 127.974, 127.974, 127.974,
127.974, 127.974, 127.974, 127.974, 127.974, 127.975, 127.975,
127.975, 127.975, 127.975, 127.975, 127.975, 127.975, 127.975,
127.976, 127.976, 127.976, 127.976, 127.976, 127.976, 127.976,
127.976, 127.976, 127.977, 127.977, 127.977, 127.977, 127.977,
127.977, 127.977, 127.977, 127.977, 127.977, 127.978, 127.978,
127.978, 127.978, 127.978, 127.978, 127.978, 127.978, 127.978,
127.979, 127.979, 127.979, 127.979, 127.979, 127.979, 127.979,
127.979, 127.979, 127.979, 127.979, 127.98, 127.98, 127.98, 127.98,
127.98, 127.98, 127.98, 127.98, 127.98, 127.98, 127.98, 127.981,
127.981, 127.981, 127.981, 127.981, 127.981, 127.981, 127.981,
127.981, 127.981, 127.981, 127.982, 127.982, 127.982, 127.982,
127.982, 127.982, 127.982, 127.982, 127.982, 127.982, 127.982,
127.982, 127.983, 127.983, 127.983, 127.983, 127.983, 127.983,
127.983, 127.983, 127.983, 127.983, 127.983, 127.983, 127.983,
127.984, 127.984, 127.984, 127.984, 127.984, 127.984, 127.984,
127.984, 127.984, 127.984, 127.984, 127.984, 127.984, 127.984,
127.985, 127.985, 127.985, 127.985, 127.985, 127.985, 127.985,
127.985, 127.985, 127.985, 127.985, 127.985, 127.985, 127.985,
127.986, 127.986, 127.986, 127.986, 127.986, 127.986, 127.986,
127.986, 127.986, 127.986, 127.986, 127.986, 127.986, 127.986,
127.986, 127.987, 127.987, 127.987, 127.987, 127.987, 127.987,
127.987, 127.987, 127.987, 127.987, 127.987, 127.987, 127.987,
127.987, 127.987, 127.987, 127.987, 127.988, 127.988, 127.988,
127.988, 127.988, 127.988, 127.988, 127.988, 127.988, 127.988,
127.988, 127.988, 127.988, 127.988, 127.988, 127.988, 127.988,
127.988, 127.989, 127.989, 127.989, 127.989, 127.989, 127.989,
127.989, 127.989, 127.989, 127.989, 127.989, 127.989, 127.989,
127.989, 127.989, 127.989, 127.989, 127.989, 127.989, 127.99, 127.99,
127.99, 127.99, 127.99, 127.99, 127.99, 127.99, 127.99, 127.99,
127.99, 127.99, 127.99, 127.99, 127.99, 127.99, 127.99, 127.99,
127.99, 127.99, 127.99, 127.99, 127.991, 127.991, 127.991, 127.991,
127.991, 127.991, 127.991, 127.991, 127.991, 127.991, 127.991,
127.991, 127.991, 127.991, 127.991, 127.991, 127.991, 127.991,
127.991, 127.991, 127.991, 127.991, 127.991, 127.992, 127.992,
127.992, 127.992, 127.992, 127.992, 127.992, 127.992, 127.992,
127.992, 127.992, 127.992, 127.992, 127.992, 127.992, 127.992,
127.992, 127.992, 127.992, 127.992, 127.992, 127.992, 127.992,
127.992, 127.992, 127.992, 127.992, 127.993, 127.993, 127.993,
127.993, 127.993, 127.993, 127.993, 127.993, 127.993, 127.993,
127.993, 127.993, 127.993, 127.993, 127.993, 127.993, 127.993,
127.993, 127.993, 127.993, 127.993, 127.993, 127.993, 127.993,
127.993, 127.993, 127.993, 127.993, 127.993, 127.993, 127.994,
127.994, 127.994, 127.994, 127.994, 127.994, 127.994, 127.994,
127.994, 127.994, 127.994, 127.994, 127.994, 127.994, 127.994,
127.994, 127.994, 127.994, 127.994, 127.994, 127.994, 127.994,
127.994, 127.994, 127.994, 127.994, 127.994, 127.994, 127.994,
127.994, 127.994, 127.994, 127.994, 127.994, 127.994, 127.995,
127.995, 127.995, 127.995, 127.995, 127.995, 127.995, 127.995,
127.995, 127.995, 127.995, 127.995, 127.995, 127.995, 127.995,
127.995, 127.995, 127.995, 127.995, 127.995, 127.995, 127.995,
127.995, 127.995, 127.995, 127.995, 127.995, 127.995, 127.995,
127.995, 127.995, 127.995, 127.995, 127.995, 127.995, 127.995,
127.995, 127.995, 127.995, 127.995, 127.995, 127.995, 127.996,
127.996, 127.996, 127.996, 127.996, 127.996, 127.996, 127.996,
127.996, 127.996, 127.996, 127.996, 127.996, 127.996, 127.996,
127.996, 127.996, 127.996, 127.996, 127.996, 127.996, 127.996,
127.996, 127.996, 127.996, 127.996, 127.996, 127.996, 127.996,
127.996, 127.996, 127.996, 127.996, 127.996, 127.996, 127.996,
127.996, 127.996, 127.996, 127.996, 127.996, 127.996, 127.996,
127.996, 127.996, 127.996, 127.996, 127.996, 127.996, 127.996,
127.996, 127.996, 127.996, 127.997, 127.997, 127.997, 127.997,
127.997, 127.997, 127.997, 127.997, 127.997, 127.997, 127.997,
127.997, 127.997, 127.997, 127.997, 127.997, 127.997, 127.997,
127.997, 127.997, 127.997, 127.997, 127.997, 127.997, 127.997,
127.997, 127.997, 127.997, 127.997, 127.997, 127.997, 127.997,
127.997, 127.997, 127.997, 127.997, 127.997, 127.997, 127.997,
127.997, 127.997, 127.997, 127.997, 127.997, 127.997, 127.997,
127.997, 127.997, 127.997, 127.997, 127.997, 127.997, 127.997,
127.997, 127.997, 127.997, 127.997, 127.997, 127.997, 127.997,
127.997, 127.997, 127.997, 127.997, 127.997, 127.997, 127.997,
127.997, 127.997, 127.998, 127.998, 127.998, 127.998, 127.998,
127.998, 127.998, 127.998, 127.998, 127.998, 127.998, 127.998,
127.998, 127.998, 127.998, 127.998, 127.998, 127.998, 127.998,
127.998, 127.998, 127.998, 127.998, 127.998, 127.998, 127.998,
127.998, 127.998, 127.998, 127.998, 127.998, 127.998, 127.998,
127.998, 127.998, 127.998, 127.998, 127.998, 127.998, 127.998,
127.998, 127.998, 127.998, 127.998, 127.998, 127.998, 127.998,
127.998, 127.998, 127.998, 127.998, 127.998, 127.998, 127.998,
127.998, 127.998, 127.998, 127.998, 127.998, 127.998, 127.998,
127.998, 127.998, 127.998, 127.998, 127.998, 127.998, 127.998,
127.998, 127.998, 127.998, 127.998, 127.998, 127.998, 127.998,
127.998, 127.998, 127.998, 127.998, 127.998, 127.998, 127.998,
127.998, 127.998, 127.998, 127.998, 127.998, 127.998, 127.998,
127.998, 127.998, 127.998, 127.998, 127.998, 127.998, 127.998,
127.998, 127.998, 127.998, 127.998, 127.998, 127.998, 127.998,
127.998, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 127.999, 127.999,
127.999, 127.999, 127.999, 127.999, 127.999, 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,
128., 128., 128., 128., 128., 128., 128., 128., 128.))
data_avg_set_relevant <- data_avg_set[data_avg_set[,2]>85 & data_avg_set[,2]<127.9,]
plot <- ggplot2::ggplot(data_avg_set_relevant, ggplot2::aes(x,avg)) +
ggplot2::geom_point() +
ggplot2::scale_y_continuous(name="Erwartungswert der gefundenen Eviction Sets",
limits=c(5760-128, 8192),
breaks=c(seq(5760-128,8192,256),8192)) +
ggplot2::scale_x_continuous(name="Anzahl an Adressen im Pool (x)",
limits=c(2200, 3800),
breaks=seq(2200,3800,200))
plot
data_avg_set_relevant[,2] <- (data_avg_set_relevant[,2])*64
plot <- ggplot2::ggplot(data_avg_set_relevant, ggplot2::aes(x,avg)) +
ggplot2::geom_point() +
ggplot2::scale_y_continuous(name="Erwartungswert der gefundenen Eviction Sets",
limits=c(5760-128, 8192),
breaks=c(seq(5760-128,8192,256),8192)) +
ggplot2::scale_x_continuous(name="Anzahl an Adressen im Pool (x)",
limits=c(2200, 3800),
breaks=seq(2200,3800,200))
plot
ggplot2TikzPlot('plot_avg_es.tex', plot)
ggplot2TikzPlot <- function(name, ggplot){
require( tikzDevice )
tikz( name )
print(ggplot)
dev.off()
}
ggplot2TikzPlot('plot_avg_es.tex', plot)
n<-100000
l <- 1:n
for(i in 1:n){
l[i] <- sum(table(sample(1:3, 7, replace = T)) >= 2)
}
sum(sapply(l,function(x){x==2}))/n
n<-10000
l <- 1:n
for(i in 1:n){
l[i] <- sum(table(sample(1:3, 6, replace = T)) >= 2)
}
sum(sapply(l,function(x){x==2}))/n
n<-10000
l <- 1:n
for(i in 1:n){
l[i] <- sum(table(sample(1:3, 6, replace = T)) >= 2)
}
sum(sapply(l,function(x){x==3}))/n
n<-10000
l <- 1:n
for(i in 1:n){
l[i] <- sum(table(sample(1:3, 7, replace = T)) >= 2)
}
sum(sapply(l,function(x){x==3}))/n
n<-100000
l <- 1:n
for(i in 1:n){
l[i] <- sum(table(sample(1:3, 7, replace = T)) >= 2)
}
sum(sapply(l,function(x){x==3}))/n
n<-100000
l <- 1:n
for(i in 1:n){
l[i] <- sum(table(sample(1:3, 8, replace = T)) >= 2)
}
sum(sapply(l,function(x){x==3}))/n
n<-10000
l <- 1:n
k <- 3 #farben, slices
a <- 2 #assoziativität
samples <- 8
for(i in 1:n){
l[i] <- sum(table(sample(1:k, samples, replace = T)) >= a)
}
sum(sapply(l,function(x){x==k}))/n
n<-100000
l <- 1:n
for(i in 1:n){
l[i] <- sum(table(sample(1:4, 70, replace = T)) >= 16)
}
sum(sapply(l,function(x){x==4}))/n
n<-10000
l <- 1:n
k <- 3 #farben, slices
a <- 2 #assoziativität
samples <- 8
for(i in 1:n){
l[i] <- sum(table(sample(1:k, samples, replace = T)) >= a)
}
sum(sapply(l,function(x){x==k}))/n
n<-100000
l <- 1:n
for(i in 1:n){
l[i] <- sum(table(sample(1:4, 64, replace = T)) >= 16)
}
sum(sapply(l,function(x){x==4}))/n
mydf <- data.frame(x=c(1e6, 175, 1a, 362, 14, 130, 6c, 30b, c, c0, 84, 88, 1b0, 1dd, 120, 400, 26c, 238, 38, ef, a0, 8c, 230, 28, 124, 119, 120, 3f4, 8c, 30, f4, 20, 120, 110, 20, 263, 9c, 50, 1cc, 2a6, 57, 1b4, 90, 1a0, 38, 41b, 11c, f8, 6f3, 44, 128, 1dc, f0, 285, 1b1, b3, 68, 2be, 32c, 105, cc, 8c, 70, e8, 214, 1a5, 54, c8, e8, 4df, 90, 54, 1d4, 148, 88, 886, 70, 9c, 2ca, 232, d6, 120, 108, 280, 583, a61, 178, 27d, 9f, 6e9, 248, 3ca, 241, 4c, 7c)
mydf <- data.frame(x=c(264, 140, 224, 116, 24, 292, 212, 239, 684, 252, 24, 24, 176, 908, 787, 640, 92, 1451, 80, 304, 172, 244, 564, 127, 804, 416, 104, 877, 716, 104, 40, 64, 176, 100, 500, 48, 104, 189, 96, 808, 620, 100, 72, 252, 172, 728, 168, 268, 54, 214, 160, 324, 454, 286, 90, 4918, 278, 516, 1160, 168, 236, 116, 252, 131, 160, 44, 136, 64, 1072, 122, 572, 296, 48, 316, 228, 940, 100, 748, 2949, 120, 104, 88, 389, 32, 772, 544, 268, 488, 4413, 232, 64, 4332, 39, 536, 24)
)
View(mydf)
values <- c(264, 140, 224, 116, 24, 292, 212, 239, 684, 252, 24, 24, 176, 908, 787, 640, 92, 1451, 80, 304, 172, 244, 564, 127, 804, 416, 104, 877, 716, 104, 40, 64, 176, 100, 500, 48, 104, 189, 96, 808, 620, 100, 72, 252, 172, 728, 168, 268, 54, 214, 160, 324, 454, 286, 90, 4918, 278, 516, 1160, 168, 236, 116, 252, 131, 160, 44, 136, 64, 1072, 122, 572, 296, 48, 316, 228, 940, 100, 748, 2949, 120, 104, 88, 389, 32, 772, 544, 268, 488, 4413, 232, 64, 4332, 39, 536, 24)
table(values)
n<-100000
l <- 1:n
for(i in 1:n){
l[i] <- sum(table(sample(1:4, 64, replace = T)) >= 16)
}
sum(sapply(l,function(x){x==4}))/n
n<-100000
l <- 1:n
for(i in 1:n){
l[i] <- sum(table(sample(1:4, 70, replace = T)) >= 16)
}
sum(sapply(l,function(x){x==4}))/n
n<-100000
l <- 1:n
for(i in 1:n){
l[i] <- sum(table(sample(1:4, 80, replace = T)) >= 16)
}
sum(sapply(l,function(x){x==4}))/n
n<-100000
l <- 1:n
for(i in 1:n){
l[i] <- sum(table(sample(1:4, 90, replace = T)) >= 16)
}
sum(sapply(l,function(x){x==4}))/n
View(mydf)
setwd("~/MA_2/data/benchmarks_es_build/")
files <- list.files()
block_count <- sapply(files, function(x) as.integer(substr(x, 1, 4)))
important_attributes <- list("lines aka memory-blocks" = "[0-9]+$",
"ngroups:" = "[0-9]+$",
"Eviction set total time:" = "\\s[0-9]+\\s",
"runtime expand:" = ".+")
filter_data_from_file <- function(file_name){
file_attributes <- sapply(1:length(important_attributes),function(x)list())
names(file_attributes) <- names(important_attributes)
file_data <- readLines(file_name)
#get attributes
for(line in file_data){
for(important_attribute in names(important_attributes)){
if(grepl(important_attribute, line, fixed=TRUE)){
#print(important_attribute)
data <- stringr::str_extract(line,important_attributes[[important_attribute]])
if(!is.na(as.integer(data))){
data <- as.integer(data)
}
file_attributes[[important_attribute]][[length(file_attributes[[important_attribute]])+1]] <- data
}
}
}
df <- data.frame(matrix(unlist(file_attributes), nrow=20), stringsAsFactors = F)
df[,1] <- as.numeric(df[,1])
df[,2] <- as.numeric(df[,2])
df[,3] <- as.numeric(df[,3])
colnames(df) <- c("memBlocks", "NumberEs", "Time", "TimePhases")
return(df)
}
data_df <- NULL
for(file in files){
data_df <- rbind(data_df, filter_data_from_file(file))
}
View(data_df)
cut_data_df <- data_df[data_df[,3]<20000,]
cut_data_df <- data_df
mean_data_df <- aggregate(cut_data_df[, 2:3], list(cut_data_df$memBlocks), mean)
colnames(mean_data_df) <- c("blocks","mean_es","mean_time")
View(mean_data_df)
setwd("~/MA_2/master-moritz_krebbel-drive_by_cache_attacks/code/r/memory-locking/")
load("data.RData")
